/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "maxY": 4821.0, "series": [{"data": [[0.0, 7.0], [0.1, 7.0], [0.2, 10.0], [0.3, 12.0], [0.4, 14.0], [0.5, 15.0], [0.6, 17.0], [0.7, 17.0], [0.8, 21.0], [0.9, 37.0], [1.0, 39.0], [1.1, 40.0], [1.2, 41.0], [1.3, 45.0], [1.4, 45.0], [1.5, 48.0], [1.6, 50.0], [1.7, 50.0], [1.8, 51.0], [1.9, 53.0], [2.0, 54.0], [2.1, 54.0], [2.2, 55.0], [2.3, 57.0], [2.4, 58.0], [2.5, 58.0], [2.6, 58.0], [2.7, 60.0], [2.8, 60.0], [2.9, 62.0], [3.0, 65.0], [3.1, 66.0], [3.2, 67.0], [3.3, 67.0], [3.4, 68.0], [3.5, 68.0], [3.6, 70.0], [3.7, 71.0], [3.8, 72.0], [3.9, 73.0], [4.0, 74.0], [4.1, 83.0], [4.2, 85.0], [4.3, 86.0], [4.4, 87.0], [4.5, 87.0], [4.6, 93.0], [4.7, 94.0], [4.8, 96.0], [4.9, 96.0], [5.0, 100.0], [5.1, 101.0], [5.2, 102.0], [5.3, 102.0], [5.4, 102.0], [5.5, 108.0], [5.6, 108.0], [5.7, 109.0], [5.8, 109.0], [5.9, 110.0], [6.0, 110.0], [6.1, 110.0], [6.2, 111.0], [6.3, 113.0], [6.4, 114.0], [6.5, 114.0], [6.6, 115.0], [6.7, 115.0], [6.8, 118.0], [6.9, 121.0], [7.0, 125.0], [7.1, 126.0], [7.2, 127.0], [7.3, 128.0], [7.4, 128.0], [7.5, 129.0], [7.6, 129.0], [7.7, 129.0], [7.8, 130.0], [7.9, 130.0], [8.0, 131.0], [8.1, 131.0], [8.2, 132.0], [8.3, 133.0], [8.4, 135.0], [8.5, 136.0], [8.6, 136.0], [8.7, 138.0], [8.8, 139.0], [8.9, 139.0], [9.0, 139.0], [9.1, 140.0], [9.2, 140.0], [9.3, 142.0], [9.4, 144.0], [9.5, 144.0], [9.6, 145.0], [9.7, 145.0], [9.8, 146.0], [9.9, 147.0], [10.0, 148.0], [10.1, 149.0], [10.2, 152.0], [10.3, 153.0], [10.4, 153.0], [10.5, 155.0], [10.6, 155.0], [10.7, 156.0], [10.8, 156.0], [10.9, 156.0], [11.0, 157.0], [11.1, 157.0], [11.2, 157.0], [11.3, 157.0], [11.4, 158.0], [11.5, 158.0], [11.6, 158.0], [11.7, 158.0], [11.8, 158.0], [11.9, 160.0], [12.0, 162.0], [12.1, 163.0], [12.2, 163.0], [12.3, 163.0], [12.4, 164.0], [12.5, 164.0], [12.6, 165.0], [12.7, 166.0], [12.8, 166.0], [12.9, 166.0], [13.0, 168.0], [13.1, 169.0], [13.2, 170.0], [13.3, 170.0], [13.4, 172.0], [13.5, 174.0], [13.6, 174.0], [13.7, 176.0], [13.8, 177.0], [13.9, 177.0], [14.0, 180.0], [14.1, 182.0], [14.2, 182.0], [14.3, 184.0], [14.4, 184.0], [14.5, 186.0], [14.6, 187.0], [14.7, 188.0], [14.8, 188.0], [14.9, 189.0], [15.0, 190.0], [15.1, 190.0], [15.2, 191.0], [15.3, 191.0], [15.4, 191.0], [15.5, 191.0], [15.6, 191.0], [15.7, 191.0], [15.8, 192.0], [15.9, 192.0], [16.0, 192.0], [16.1, 193.0], [16.2, 193.0], [16.3, 194.0], [16.4, 196.0], [16.5, 197.0], [16.6, 197.0], [16.7, 197.0], [16.8, 198.0], [16.9, 199.0], [17.0, 200.0], [17.1, 201.0], [17.2, 201.0], [17.3, 201.0], [17.4, 201.0], [17.5, 201.0], [17.6, 202.0], [17.7, 202.0], [17.8, 202.0], [17.9, 202.0], [18.0, 203.0], [18.1, 204.0], [18.2, 206.0], [18.3, 206.0], [18.4, 206.0], [18.5, 209.0], [18.6, 210.0], [18.7, 210.0], [18.8, 211.0], [18.9, 212.0], [19.0, 215.0], [19.1, 215.0], [19.2, 216.0], [19.3, 217.0], [19.4, 218.0], [19.5, 218.0], [19.6, 219.0], [19.7, 221.0], [19.8, 224.0], [19.9, 224.0], [20.0, 226.0], [20.1, 230.0], [20.2, 230.0], [20.3, 231.0], [20.4, 232.0], [20.5, 232.0], [20.6, 232.0], [20.7, 233.0], [20.8, 234.0], [20.9, 237.0], [21.0, 237.0], [21.1, 238.0], [21.2, 239.0], [21.3, 240.0], [21.4, 240.0], [21.5, 240.0], [21.6, 241.0], [21.7, 241.0], [21.8, 243.0], [21.9, 243.0], [22.0, 243.0], [22.1, 243.0], [22.2, 244.0], [22.3, 245.0], [22.4, 245.0], [22.5, 246.0], [22.6, 246.0], [22.7, 246.0], [22.8, 246.0], [22.9, 248.0], [23.0, 249.0], [23.1, 250.0], [23.2, 250.0], [23.3, 251.0], [23.4, 251.0], [23.5, 252.0], [23.6, 252.0], [23.7, 253.0], [23.8, 253.0], [23.9, 253.0], [24.0, 254.0], [24.1, 254.0], [24.2, 254.0], [24.3, 254.0], [24.4, 254.0], [24.5, 255.0], [24.6, 255.0], [24.7, 256.0], [24.8, 256.0], [24.9, 257.0], [25.0, 258.0], [25.1, 258.0], [25.2, 260.0], [25.3, 260.0], [25.4, 262.0], [25.5, 263.0], [25.6, 263.0], [25.7, 263.0], [25.8, 263.0], [25.9, 264.0], [26.0, 264.0], [26.1, 265.0], [26.2, 266.0], [26.3, 266.0], [26.4, 266.0], [26.5, 266.0], [26.6, 267.0], [26.7, 267.0], [26.8, 267.0], [26.9, 268.0], [27.0, 268.0], [27.1, 269.0], [27.2, 270.0], [27.3, 271.0], [27.4, 272.0], [27.5, 272.0], [27.6, 274.0], [27.7, 274.0], [27.8, 274.0], [27.9, 274.0], [28.0, 275.0], [28.1, 277.0], [28.2, 277.0], [28.3, 279.0], [28.4, 279.0], [28.5, 280.0], [28.6, 281.0], [28.7, 281.0], [28.8, 282.0], [28.9, 284.0], [29.0, 289.0], [29.1, 290.0], [29.2, 291.0], [29.3, 291.0], [29.4, 292.0], [29.5, 293.0], [29.6, 298.0], [29.7, 299.0], [29.8, 299.0], [29.9, 300.0], [30.0, 300.0], [30.1, 300.0], [30.2, 305.0], [30.3, 306.0], [30.4, 309.0], [30.5, 318.0], [30.6, 319.0], [30.7, 321.0], [30.8, 322.0], [30.9, 323.0], [31.0, 324.0], [31.1, 329.0], [31.2, 329.0], [31.3, 330.0], [31.4, 331.0], [31.5, 331.0], [31.6, 333.0], [31.7, 335.0], [31.8, 338.0], [31.9, 338.0], [32.0, 339.0], [32.1, 339.0], [32.2, 339.0], [32.3, 340.0], [32.4, 342.0], [32.5, 343.0], [32.6, 349.0], [32.7, 351.0], [32.8, 351.0], [32.9, 351.0], [33.0, 352.0], [33.1, 355.0], [33.2, 355.0], [33.3, 355.0], [33.4, 356.0], [33.5, 357.0], [33.6, 358.0], [33.7, 359.0], [33.8, 359.0], [33.9, 360.0], [34.0, 360.0], [34.1, 360.0], [34.2, 360.0], [34.3, 361.0], [34.4, 361.0], [34.5, 363.0], [34.6, 363.0], [34.7, 363.0], [34.8, 363.0], [34.9, 364.0], [35.0, 365.0], [35.1, 365.0], [35.2, 366.0], [35.3, 366.0], [35.4, 367.0], [35.5, 368.0], [35.6, 368.0], [35.7, 369.0], [35.8, 370.0], [35.9, 370.0], [36.0, 370.0], [36.1, 371.0], [36.2, 373.0], [36.3, 373.0], [36.4, 375.0], [36.5, 378.0], [36.6, 378.0], [36.7, 379.0], [36.8, 380.0], [36.9, 381.0], [37.0, 383.0], [37.1, 383.0], [37.2, 385.0], [37.3, 389.0], [37.4, 392.0], [37.5, 394.0], [37.6, 395.0], [37.7, 396.0], [37.8, 397.0], [37.9, 398.0], [38.0, 399.0], [38.1, 400.0], [38.2, 401.0], [38.3, 401.0], [38.4, 403.0], [38.5, 404.0], [38.6, 406.0], [38.7, 406.0], [38.8, 406.0], [38.9, 406.0], [39.0, 407.0], [39.1, 407.0], [39.2, 407.0], [39.3, 407.0], [39.4, 408.0], [39.5, 411.0], [39.6, 411.0], [39.7, 412.0], [39.8, 413.0], [39.9, 413.0], [40.0, 416.0], [40.1, 416.0], [40.2, 417.0], [40.3, 417.0], [40.4, 417.0], [40.5, 418.0], [40.6, 419.0], [40.7, 419.0], [40.8, 420.0], [40.9, 422.0], [41.0, 422.0], [41.1, 422.0], [41.2, 423.0], [41.3, 424.0], [41.4, 425.0], [41.5, 425.0], [41.6, 426.0], [41.7, 427.0], [41.8, 428.0], [41.9, 428.0], [42.0, 428.0], [42.1, 429.0], [42.2, 429.0], [42.3, 429.0], [42.4, 430.0], [42.5, 430.0], [42.6, 430.0], [42.7, 431.0], [42.8, 433.0], [42.9, 434.0], [43.0, 434.0], [43.1, 434.0], [43.2, 434.0], [43.3, 435.0], [43.4, 435.0], [43.5, 436.0], [43.6, 436.0], [43.7, 436.0], [43.8, 437.0], [43.9, 438.0], [44.0, 438.0], [44.1, 438.0], [44.2, 438.0], [44.3, 439.0], [44.4, 440.0], [44.5, 442.0], [44.6, 443.0], [44.7, 443.0], [44.8, 443.0], [44.9, 444.0], [45.0, 444.0], [45.1, 444.0], [45.2, 445.0], [45.3, 445.0], [45.4, 446.0], [45.5, 446.0], [45.6, 446.0], [45.7, 446.0], [45.8, 447.0], [45.9, 448.0], [46.0, 449.0], [46.1, 451.0], [46.2, 451.0], [46.3, 452.0], [46.4, 453.0], [46.5, 453.0], [46.6, 453.0], [46.7, 454.0], [46.8, 454.0], [46.9, 455.0], [47.0, 456.0], [47.1, 456.0], [47.2, 456.0], [47.3, 456.0], [47.4, 456.0], [47.5, 458.0], [47.6, 458.0], [47.7, 458.0], [47.8, 459.0], [47.9, 459.0], [48.0, 459.0], [48.1, 459.0], [48.2, 459.0], [48.3, 459.0], [48.4, 460.0], [48.5, 460.0], [48.6, 460.0], [48.7, 461.0], [48.8, 461.0], [48.9, 461.0], [49.0, 461.0], [49.1, 461.0], [49.2, 461.0], [49.3, 462.0], [49.4, 462.0], [49.5, 462.0], [49.6, 462.0], [49.7, 463.0], [49.8, 463.0], [49.9, 463.0], [50.0, 463.0], [50.1, 464.0], [50.2, 464.0], [50.3, 464.0], [50.4, 465.0], [50.5, 465.0], [50.6, 465.0], [50.7, 465.0], [50.8, 466.0], [50.9, 466.0], [51.0, 467.0], [51.1, 467.0], [51.2, 469.0], [51.3, 469.0], [51.4, 469.0], [51.5, 469.0], [51.6, 469.0], [51.7, 470.0], [51.8, 471.0], [51.9, 471.0], [52.0, 472.0], [52.1, 472.0], [52.2, 473.0], [52.3, 475.0], [52.4, 475.0], [52.5, 476.0], [52.6, 477.0], [52.7, 477.0], [52.8, 477.0], [52.9, 477.0], [53.0, 477.0], [53.1, 477.0], [53.2, 478.0], [53.3, 479.0], [53.4, 479.0], [53.5, 479.0], [53.6, 480.0], [53.7, 481.0], [53.8, 482.0], [53.9, 482.0], [54.0, 483.0], [54.1, 484.0], [54.2, 485.0], [54.3, 485.0], [54.4, 485.0], [54.5, 486.0], [54.6, 486.0], [54.7, 487.0], [54.8, 487.0], [54.9, 487.0], [55.0, 487.0], [55.1, 488.0], [55.2, 488.0], [55.3, 489.0], [55.4, 489.0], [55.5, 490.0], [55.6, 490.0], [55.7, 490.0], [55.8, 491.0], [55.9, 491.0], [56.0, 492.0], [56.1, 493.0], [56.2, 493.0], [56.3, 494.0], [56.4, 494.0], [56.5, 494.0], [56.6, 494.0], [56.7, 495.0], [56.8, 496.0], [56.9, 496.0], [57.0, 497.0], [57.1, 497.0], [57.2, 497.0], [57.3, 497.0], [57.4, 498.0], [57.5, 498.0], [57.6, 498.0], [57.7, 499.0], [57.8, 499.0], [57.9, 499.0], [58.0, 499.0], [58.1, 500.0], [58.2, 500.0], [58.3, 500.0], [58.4, 501.0], [58.5, 501.0], [58.6, 505.0], [58.7, 505.0], [58.8, 507.0], [58.9, 507.0], [59.0, 509.0], [59.1, 509.0], [59.2, 509.0], [59.3, 509.0], [59.4, 510.0], [59.5, 511.0], [59.6, 511.0], [59.7, 511.0], [59.8, 512.0], [59.9, 512.0], [60.0, 512.0], [60.1, 512.0], [60.2, 513.0], [60.3, 513.0], [60.4, 513.0], [60.5, 514.0], [60.6, 514.0], [60.7, 515.0], [60.8, 515.0], [60.9, 515.0], [61.0, 515.0], [61.1, 515.0], [61.2, 515.0], [61.3, 516.0], [61.4, 516.0], [61.5, 516.0], [61.6, 517.0], [61.7, 517.0], [61.8, 517.0], [61.9, 518.0], [62.0, 518.0], [62.1, 518.0], [62.2, 518.0], [62.3, 519.0], [62.4, 519.0], [62.5, 519.0], [62.6, 520.0], [62.7, 520.0], [62.8, 520.0], [62.9, 520.0], [63.0, 520.0], [63.1, 520.0], [63.2, 521.0], [63.3, 522.0], [63.4, 522.0], [63.5, 522.0], [63.6, 522.0], [63.7, 522.0], [63.8, 523.0], [63.9, 523.0], [64.0, 524.0], [64.1, 525.0], [64.2, 526.0], [64.3, 526.0], [64.4, 526.0], [64.5, 527.0], [64.6, 531.0], [64.7, 532.0], [64.8, 533.0], [64.9, 533.0], [65.0, 533.0], [65.1, 534.0], [65.2, 534.0], [65.3, 535.0], [65.4, 535.0], [65.5, 535.0], [65.6, 536.0], [65.7, 536.0], [65.8, 536.0], [65.9, 537.0], [66.0, 537.0], [66.1, 538.0], [66.2, 539.0], [66.3, 544.0], [66.4, 547.0], [66.5, 549.0], [66.6, 549.0], [66.7, 549.0], [66.8, 550.0], [66.9, 551.0], [67.0, 551.0], [67.1, 552.0], [67.2, 553.0], [67.3, 554.0], [67.4, 556.0], [67.5, 556.0], [67.6, 558.0], [67.7, 560.0], [67.8, 560.0], [67.9, 561.0], [68.0, 562.0], [68.1, 564.0], [68.2, 565.0], [68.3, 566.0], [68.4, 566.0], [68.5, 569.0], [68.6, 569.0], [68.7, 569.0], [68.8, 570.0], [68.9, 571.0], [69.0, 571.0], [69.1, 572.0], [69.2, 574.0], [69.3, 574.0], [69.4, 575.0], [69.5, 576.0], [69.6, 576.0], [69.7, 576.0], [69.8, 577.0], [69.9, 578.0], [70.0, 578.0], [70.1, 578.0], [70.2, 579.0], [70.3, 582.0], [70.4, 582.0], [70.5, 582.0], [70.6, 584.0], [70.7, 584.0], [70.8, 585.0], [70.9, 585.0], [71.0, 585.0], [71.1, 586.0], [71.2, 586.0], [71.3, 589.0], [71.4, 591.0], [71.5, 591.0], [71.6, 591.0], [71.7, 591.0], [71.8, 593.0], [71.9, 593.0], [72.0, 594.0], [72.1, 594.0], [72.2, 595.0], [72.3, 595.0], [72.4, 596.0], [72.5, 596.0], [72.6, 597.0], [72.7, 600.0], [72.8, 603.0], [72.9, 604.0], [73.0, 604.0], [73.1, 605.0], [73.2, 606.0], [73.3, 607.0], [73.4, 608.0], [73.5, 615.0], [73.6, 617.0], [73.7, 617.0], [73.8, 617.0], [73.9, 618.0], [74.0, 620.0], [74.1, 620.0], [74.2, 621.0], [74.3, 621.0], [74.4, 622.0], [74.5, 622.0], [74.6, 622.0], [74.7, 622.0], [74.8, 623.0], [74.9, 623.0], [75.0, 623.0], [75.1, 623.0], [75.2, 623.0], [75.3, 623.0], [75.4, 624.0], [75.5, 624.0], [75.6, 624.0], [75.7, 624.0], [75.8, 624.0], [75.9, 625.0], [76.0, 625.0], [76.1, 625.0], [76.2, 626.0], [76.3, 626.0], [76.4, 626.0], [76.5, 627.0], [76.6, 627.0], [76.7, 627.0], [76.8, 627.0], [76.9, 627.0], [77.0, 629.0], [77.1, 629.0], [77.2, 629.0], [77.3, 629.0], [77.4, 629.0], [77.5, 629.0], [77.6, 629.0], [77.7, 630.0], [77.8, 630.0], [77.9, 631.0], [78.0, 631.0], [78.1, 631.0], [78.2, 632.0], [78.3, 632.0], [78.4, 632.0], [78.5, 632.0], [78.6, 632.0], [78.7, 633.0], [78.8, 633.0], [78.9, 633.0], [79.0, 633.0], [79.1, 634.0], [79.2, 634.0], [79.3, 634.0], [79.4, 635.0], [79.5, 635.0], [79.6, 635.0], [79.7, 635.0], [79.8, 636.0], [79.9, 636.0], [80.0, 638.0], [80.1, 638.0], [80.2, 639.0], [80.3, 639.0], [80.4, 639.0], [80.5, 640.0], [80.6, 640.0], [80.7, 640.0], [80.8, 640.0], [80.9, 641.0], [81.0, 641.0], [81.1, 641.0], [81.2, 641.0], [81.3, 641.0], [81.4, 641.0], [81.5, 641.0], [81.6, 642.0], [81.7, 642.0], [81.8, 642.0], [81.9, 643.0], [82.0, 643.0], [82.1, 644.0], [82.2, 645.0], [82.3, 645.0], [82.4, 646.0], [82.5, 646.0], [82.6, 646.0], [82.7, 647.0], [82.8, 647.0], [82.9, 647.0], [83.0, 647.0], [83.1, 647.0], [83.2, 648.0], [83.3, 648.0], [83.4, 649.0], [83.5, 649.0], [83.6, 649.0], [83.7, 649.0], [83.8, 649.0], [83.9, 650.0], [84.0, 650.0], [84.1, 651.0], [84.2, 651.0], [84.3, 651.0], [84.4, 651.0], [84.5, 651.0], [84.6, 652.0], [84.7, 653.0], [84.8, 653.0], [84.9, 653.0], [85.0, 654.0], [85.1, 654.0], [85.2, 654.0], [85.3, 654.0], [85.4, 654.0], [85.5, 654.0], [85.6, 655.0], [85.7, 655.0], [85.8, 655.0], [85.9, 655.0], [86.0, 655.0], [86.1, 655.0], [86.2, 655.0], [86.3, 655.0], [86.4, 655.0], [86.5, 656.0], [86.6, 656.0], [86.7, 656.0], [86.8, 657.0], [86.9, 657.0], [87.0, 657.0], [87.1, 658.0], [87.2, 658.0], [87.3, 658.0], [87.4, 659.0], [87.5, 659.0], [87.6, 659.0], [87.7, 659.0], [87.8, 659.0], [87.9, 660.0], [88.0, 660.0], [88.1, 660.0], [88.2, 660.0], [88.3, 660.0], [88.4, 660.0], [88.5, 660.0], [88.6, 660.0], [88.7, 661.0], [88.8, 661.0], [88.9, 661.0], [89.0, 661.0], [89.1, 661.0], [89.2, 661.0], [89.3, 661.0], [89.4, 662.0], [89.5, 662.0], [89.6, 662.0], [89.7, 662.0], [89.8, 662.0], [89.9, 662.0], [90.0, 663.0], [90.1, 663.0], [90.2, 663.0], [90.3, 663.0], [90.4, 663.0], [90.5, 663.0], [90.6, 664.0], [90.7, 664.0], [90.8, 664.0], [90.9, 664.0], [91.0, 664.0], [91.1, 664.0], [91.2, 664.0], [91.3, 665.0], [91.4, 665.0], [91.5, 665.0], [91.6, 665.0], [91.7, 666.0], [91.8, 666.0], [91.9, 666.0], [92.0, 666.0], [92.1, 666.0], [92.2, 666.0], [92.3, 666.0], [92.4, 666.0], [92.5, 667.0], [92.6, 667.0], [92.7, 667.0], [92.8, 668.0], [92.9, 668.0], [93.0, 668.0], [93.1, 669.0], [93.2, 671.0], [93.3, 672.0], [93.4, 672.0], [93.5, 672.0], [93.6, 672.0], [93.7, 673.0], [93.8, 675.0], [93.9, 676.0], [94.0, 676.0], [94.1, 678.0], [94.2, 678.0], [94.3, 678.0], [94.4, 678.0], [94.5, 679.0], [94.6, 679.0], [94.7, 679.0], [94.8, 680.0], [94.9, 680.0], [95.0, 680.0], [95.1, 680.0], [95.2, 680.0], [95.3, 680.0], [95.4, 681.0], [95.5, 683.0], [95.6, 683.0], [95.7, 683.0], [95.8, 684.0], [95.9, 687.0], [96.0, 690.0], [96.1, 693.0], [96.2, 696.0], [96.3, 696.0], [96.4, 696.0], [96.5, 699.0], [96.6, 699.0], [96.7, 701.0], [96.8, 706.0], [96.9, 706.0], [97.0, 708.0], [97.1, 708.0], [97.2, 712.0], [97.3, 712.0], [97.4, 712.0], [97.5, 713.0], [97.6, 713.0], [97.7, 713.0], [97.8, 713.0], [97.9, 713.0], [98.0, 713.0], [98.1, 714.0], [98.2, 714.0], [98.3, 714.0], [98.4, 715.0], [98.5, 716.0], [98.6, 716.0], [98.7, 716.0], [98.8, 716.0], [98.9, 717.0], [99.0, 717.0], [99.1, 717.0], [99.2, 718.0], [99.3, 718.0], [99.4, 719.0], [99.5, 720.0], [99.6, 726.0], [99.7, 731.0], [99.8, 736.0], [99.9, 737.0], [100.0, 738.0]], "isOverall": false, "label": "PHP-0", "isController": false}, {"data": [[0.0, 6.0], [0.1, 12.0], [0.2, 13.0], [0.3, 14.0], [0.4, 15.0], [0.5, 21.0], [0.6, 25.0], [0.7, 39.0], [0.8, 41.0], [0.9, 41.0], [1.0, 43.0], [1.1, 44.0], [1.2, 47.0], [1.3, 49.0], [1.4, 50.0], [1.5, 51.0], [1.6, 51.0], [1.7, 52.0], [1.8, 52.0], [1.9, 56.0], [2.0, 58.0], [2.1, 60.0], [2.2, 62.0], [2.3, 63.0], [2.4, 63.0], [2.5, 63.0], [2.6, 65.0], [2.7, 65.0], [2.8, 66.0], [2.9, 67.0], [3.0, 68.0], [3.1, 71.0], [3.2, 72.0], [3.3, 74.0], [3.4, 74.0], [3.5, 83.0], [3.6, 88.0], [3.7, 89.0], [3.8, 90.0], [3.9, 93.0], [4.0, 94.0], [4.1, 95.0], [4.2, 96.0], [4.3, 97.0], [4.4, 98.0], [4.5, 99.0], [4.6, 99.0], [4.7, 100.0], [4.8, 103.0], [4.9, 104.0], [5.0, 104.0], [5.1, 105.0], [5.2, 106.0], [5.3, 107.0], [5.4, 108.0], [5.5, 113.0], [5.6, 114.0], [5.7, 115.0], [5.8, 116.0], [5.9, 116.0], [6.0, 119.0], [6.1, 121.0], [6.2, 123.0], [6.3, 124.0], [6.4, 127.0], [6.5, 127.0], [6.6, 129.0], [6.7, 130.0], [6.8, 131.0], [6.9, 131.0], [7.0, 131.0], [7.1, 132.0], [7.2, 133.0], [7.3, 133.0], [7.4, 134.0], [7.5, 135.0], [7.6, 135.0], [7.7, 135.0], [7.8, 137.0], [7.9, 138.0], [8.0, 143.0], [8.1, 144.0], [8.2, 145.0], [8.3, 145.0], [8.4, 145.0], [8.5, 146.0], [8.6, 146.0], [8.7, 147.0], [8.8, 147.0], [8.9, 147.0], [9.0, 147.0], [9.1, 148.0], [9.2, 149.0], [9.3, 149.0], [9.4, 150.0], [9.5, 151.0], [9.6, 151.0], [9.7, 151.0], [9.8, 155.0], [9.9, 155.0], [10.0, 155.0], [10.1, 156.0], [10.2, 158.0], [10.3, 159.0], [10.4, 159.0], [10.5, 159.0], [10.6, 159.0], [10.7, 160.0], [10.8, 160.0], [10.9, 160.0], [11.0, 160.0], [11.1, 162.0], [11.2, 163.0], [11.3, 163.0], [11.4, 165.0], [11.5, 165.0], [11.6, 166.0], [11.7, 166.0], [11.8, 167.0], [11.9, 167.0], [12.0, 168.0], [12.1, 168.0], [12.2, 169.0], [12.3, 170.0], [12.4, 170.0], [12.5, 171.0], [12.6, 173.0], [12.7, 173.0], [12.8, 173.0], [12.9, 175.0], [13.0, 175.0], [13.1, 176.0], [13.2, 176.0], [13.3, 181.0], [13.4, 188.0], [13.5, 190.0], [13.6, 191.0], [13.7, 191.0], [13.8, 191.0], [13.9, 192.0], [14.0, 192.0], [14.1, 192.0], [14.2, 193.0], [14.3, 193.0], [14.4, 193.0], [14.5, 194.0], [14.6, 194.0], [14.7, 194.0], [14.8, 195.0], [14.9, 196.0], [15.0, 196.0], [15.1, 197.0], [15.2, 198.0], [15.3, 201.0], [15.4, 202.0], [15.5, 202.0], [15.6, 202.0], [15.7, 202.0], [15.8, 203.0], [15.9, 204.0], [16.0, 204.0], [16.1, 204.0], [16.2, 205.0], [16.3, 205.0], [16.4, 206.0], [16.5, 211.0], [16.6, 211.0], [16.7, 212.0], [16.8, 215.0], [16.9, 218.0], [17.0, 219.0], [17.1, 220.0], [17.2, 220.0], [17.3, 222.0], [17.4, 223.0], [17.5, 223.0], [17.6, 226.0], [17.7, 226.0], [17.8, 227.0], [17.9, 227.0], [18.0, 231.0], [18.1, 231.0], [18.2, 234.0], [18.3, 235.0], [18.4, 236.0], [18.5, 236.0], [18.6, 237.0], [18.7, 238.0], [18.8, 238.0], [18.9, 239.0], [19.0, 239.0], [19.1, 240.0], [19.2, 241.0], [19.3, 241.0], [19.4, 241.0], [19.5, 241.0], [19.6, 241.0], [19.7, 243.0], [19.8, 243.0], [19.9, 244.0], [20.0, 244.0], [20.1, 244.0], [20.2, 245.0], [20.3, 245.0], [20.4, 245.0], [20.5, 246.0], [20.6, 246.0], [20.7, 247.0], [20.8, 248.0], [20.9, 248.0], [21.0, 248.0], [21.1, 249.0], [21.2, 251.0], [21.3, 252.0], [21.4, 252.0], [21.5, 252.0], [21.6, 253.0], [21.7, 255.0], [21.8, 255.0], [21.9, 255.0], [22.0, 255.0], [22.1, 255.0], [22.2, 256.0], [22.3, 256.0], [22.4, 256.0], [22.5, 256.0], [22.6, 257.0], [22.7, 257.0], [22.8, 257.0], [22.9, 257.0], [23.0, 257.0], [23.1, 258.0], [23.2, 261.0], [23.3, 261.0], [23.4, 261.0], [23.5, 262.0], [23.6, 263.0], [23.7, 263.0], [23.8, 264.0], [23.9, 264.0], [24.0, 264.0], [24.1, 265.0], [24.2, 266.0], [24.3, 266.0], [24.4, 266.0], [24.5, 266.0], [24.6, 267.0], [24.7, 268.0], [24.8, 268.0], [24.9, 268.0], [25.0, 268.0], [25.1, 268.0], [25.2, 269.0], [25.3, 269.0], [25.4, 270.0], [25.5, 270.0], [25.6, 271.0], [25.7, 272.0], [25.8, 273.0], [25.9, 273.0], [26.0, 274.0], [26.1, 274.0], [26.2, 274.0], [26.3, 275.0], [26.4, 275.0], [26.5, 275.0], [26.6, 275.0], [26.7, 276.0], [26.8, 276.0], [26.9, 276.0], [27.0, 276.0], [27.1, 277.0], [27.2, 277.0], [27.3, 279.0], [27.4, 280.0], [27.5, 282.0], [27.6, 283.0], [27.7, 285.0], [27.8, 289.0], [27.9, 292.0], [28.0, 292.0], [28.1, 293.0], [28.2, 293.0], [28.3, 295.0], [28.4, 296.0], [28.5, 297.0], [28.6, 299.0], [28.7, 301.0], [28.8, 301.0], [28.9, 302.0], [29.0, 303.0], [29.1, 303.0], [29.2, 303.0], [29.3, 304.0], [29.4, 304.0], [29.5, 309.0], [29.6, 310.0], [29.7, 311.0], [29.8, 311.0], [29.9, 311.0], [30.0, 311.0], [30.1, 312.0], [30.2, 314.0], [30.3, 315.0], [30.4, 315.0], [30.5, 316.0], [30.6, 316.0], [30.7, 317.0], [30.8, 318.0], [30.9, 318.0], [31.0, 323.0], [31.1, 324.0], [31.2, 325.0], [31.3, 325.0], [31.4, 330.0], [31.5, 330.0], [31.6, 330.0], [31.7, 333.0], [31.8, 333.0], [31.9, 334.0], [32.0, 341.0], [32.1, 343.0], [32.2, 343.0], [32.3, 344.0], [32.4, 348.0], [32.5, 350.0], [32.6, 352.0], [32.7, 352.0], [32.8, 353.0], [32.9, 355.0], [33.0, 361.0], [33.1, 361.0], [33.2, 362.0], [33.3, 362.0], [33.4, 363.0], [33.5, 363.0], [33.6, 364.0], [33.7, 364.0], [33.8, 365.0], [33.9, 365.0], [34.0, 367.0], [34.1, 367.0], [34.2, 368.0], [34.3, 369.0], [34.4, 370.0], [34.5, 370.0], [34.6, 373.0], [34.7, 375.0], [34.8, 376.0], [34.9, 376.0], [35.0, 377.0], [35.1, 377.0], [35.2, 377.0], [35.3, 379.0], [35.4, 380.0], [35.5, 380.0], [35.6, 381.0], [35.7, 382.0], [35.8, 386.0], [35.9, 391.0], [36.0, 391.0], [36.1, 398.0], [36.2, 398.0], [36.3, 398.0], [36.4, 398.0], [36.5, 400.0], [36.6, 401.0], [36.7, 401.0], [36.8, 403.0], [36.9, 403.0], [37.0, 404.0], [37.1, 404.0], [37.2, 405.0], [37.3, 407.0], [37.4, 407.0], [37.5, 408.0], [37.6, 410.0], [37.7, 410.0], [37.8, 410.0], [37.9, 413.0], [38.0, 414.0], [38.1, 415.0], [38.2, 416.0], [38.3, 418.0], [38.4, 418.0], [38.5, 418.0], [38.6, 418.0], [38.7, 418.0], [38.8, 419.0], [38.9, 420.0], [39.0, 421.0], [39.1, 422.0], [39.2, 422.0], [39.3, 422.0], [39.4, 422.0], [39.5, 422.0], [39.6, 424.0], [39.7, 424.0], [39.8, 425.0], [39.9, 426.0], [40.0, 427.0], [40.1, 428.0], [40.2, 429.0], [40.3, 430.0], [40.4, 430.0], [40.5, 430.0], [40.6, 431.0], [40.7, 431.0], [40.8, 432.0], [40.9, 432.0], [41.0, 433.0], [41.1, 434.0], [41.2, 434.0], [41.3, 435.0], [41.4, 435.0], [41.5, 435.0], [41.6, 435.0], [41.7, 436.0], [41.8, 436.0], [41.9, 436.0], [42.0, 436.0], [42.1, 437.0], [42.2, 437.0], [42.3, 437.0], [42.4, 438.0], [42.5, 438.0], [42.6, 438.0], [42.7, 438.0], [42.8, 438.0], [42.9, 439.0], [43.0, 439.0], [43.1, 439.0], [43.2, 440.0], [43.3, 440.0], [43.4, 440.0], [43.5, 440.0], [43.6, 440.0], [43.7, 441.0], [43.8, 442.0], [43.9, 442.0], [44.0, 444.0], [44.1, 444.0], [44.2, 444.0], [44.3, 444.0], [44.4, 445.0], [44.5, 445.0], [44.6, 445.0], [44.7, 445.0], [44.8, 446.0], [44.9, 446.0], [45.0, 447.0], [45.1, 447.0], [45.2, 448.0], [45.3, 449.0], [45.4, 450.0], [45.5, 450.0], [45.6, 451.0], [45.7, 451.0], [45.8, 452.0], [45.9, 453.0], [46.0, 454.0], [46.1, 454.0], [46.2, 454.0], [46.3, 455.0], [46.4, 456.0], [46.5, 457.0], [46.6, 457.0], [46.7, 457.0], [46.8, 458.0], [46.9, 458.0], [47.0, 458.0], [47.1, 458.0], [47.2, 459.0], [47.3, 459.0], [47.4, 459.0], [47.5, 459.0], [47.6, 460.0], [47.7, 460.0], [47.8, 460.0], [47.9, 461.0], [48.0, 461.0], [48.1, 462.0], [48.2, 462.0], [48.3, 462.0], [48.4, 462.0], [48.5, 462.0], [48.6, 462.0], [48.7, 462.0], [48.8, 463.0], [48.9, 463.0], [49.0, 464.0], [49.1, 464.0], [49.2, 464.0], [49.3, 464.0], [49.4, 464.0], [49.5, 464.0], [49.6, 465.0], [49.7, 465.0], [49.8, 465.0], [49.9, 465.0], [50.0, 465.0], [50.1, 466.0], [50.2, 466.0], [50.3, 466.0], [50.4, 466.0], [50.5, 467.0], [50.6, 467.0], [50.7, 467.0], [50.8, 468.0], [50.9, 468.0], [51.0, 468.0], [51.1, 468.0], [51.2, 468.0], [51.3, 469.0], [51.4, 469.0], [51.5, 469.0], [51.6, 470.0], [51.7, 470.0], [51.8, 471.0], [51.9, 471.0], [52.0, 471.0], [52.1, 471.0], [52.2, 471.0], [52.3, 472.0], [52.4, 472.0], [52.5, 473.0], [52.6, 473.0], [52.7, 473.0], [52.8, 473.0], [52.9, 473.0], [53.0, 474.0], [53.1, 474.0], [53.2, 475.0], [53.3, 476.0], [53.4, 476.0], [53.5, 477.0], [53.6, 477.0], [53.7, 477.0], [53.8, 478.0], [53.9, 478.0], [54.0, 479.0], [54.1, 479.0], [54.2, 479.0], [54.3, 479.0], [54.4, 479.0], [54.5, 480.0], [54.6, 480.0], [54.7, 481.0], [54.8, 481.0], [54.9, 481.0], [55.0, 482.0], [55.1, 482.0], [55.2, 482.0], [55.3, 482.0], [55.4, 483.0], [55.5, 484.0], [55.6, 485.0], [55.7, 487.0], [55.8, 488.0], [55.9, 488.0], [56.0, 489.0], [56.1, 490.0], [56.2, 491.0], [56.3, 491.0], [56.4, 491.0], [56.5, 491.0], [56.6, 491.0], [56.7, 492.0], [56.8, 492.0], [56.9, 492.0], [57.0, 492.0], [57.1, 493.0], [57.2, 493.0], [57.3, 493.0], [57.4, 495.0], [57.5, 495.0], [57.6, 495.0], [57.7, 495.0], [57.8, 496.0], [57.9, 497.0], [58.0, 497.0], [58.1, 498.0], [58.2, 498.0], [58.3, 498.0], [58.4, 499.0], [58.5, 499.0], [58.6, 499.0], [58.7, 499.0], [58.8, 499.0], [58.9, 499.0], [59.0, 500.0], [59.1, 500.0], [59.2, 501.0], [59.3, 501.0], [59.4, 502.0], [59.5, 502.0], [59.6, 502.0], [59.7, 502.0], [59.8, 503.0], [59.9, 503.0], [60.0, 504.0], [60.1, 505.0], [60.2, 505.0], [60.3, 506.0], [60.4, 507.0], [60.5, 507.0], [60.6, 508.0], [60.7, 509.0], [60.8, 510.0], [60.9, 510.0], [61.0, 511.0], [61.1, 514.0], [61.2, 514.0], [61.3, 514.0], [61.4, 516.0], [61.5, 516.0], [61.6, 516.0], [61.7, 517.0], [61.8, 517.0], [61.9, 517.0], [62.0, 517.0], [62.1, 518.0], [62.2, 518.0], [62.3, 518.0], [62.4, 518.0], [62.5, 518.0], [62.6, 519.0], [62.7, 519.0], [62.8, 519.0], [62.9, 520.0], [63.0, 520.0], [63.1, 520.0], [63.2, 520.0], [63.3, 520.0], [63.4, 520.0], [63.5, 521.0], [63.6, 522.0], [63.7, 522.0], [63.8, 523.0], [63.9, 523.0], [64.0, 523.0], [64.1, 524.0], [64.2, 524.0], [64.3, 524.0], [64.4, 526.0], [64.5, 526.0], [64.6, 527.0], [64.7, 527.0], [64.8, 528.0], [64.9, 529.0], [65.0, 529.0], [65.1, 529.0], [65.2, 531.0], [65.3, 531.0], [65.4, 534.0], [65.5, 536.0], [65.6, 537.0], [65.7, 538.0], [65.8, 538.0], [65.9, 539.0], [66.0, 539.0], [66.1, 540.0], [66.2, 541.0], [66.3, 543.0], [66.4, 544.0], [66.5, 546.0], [66.6, 546.0], [66.7, 551.0], [66.8, 552.0], [66.9, 553.0], [67.0, 554.0], [67.1, 555.0], [67.2, 555.0], [67.3, 555.0], [67.4, 559.0], [67.5, 562.0], [67.6, 563.0], [67.7, 564.0], [67.8, 565.0], [67.9, 566.0], [68.0, 567.0], [68.1, 567.0], [68.2, 568.0], [68.3, 569.0], [68.4, 569.0], [68.5, 570.0], [68.6, 571.0], [68.7, 572.0], [68.8, 573.0], [68.9, 574.0], [69.0, 575.0], [69.1, 576.0], [69.2, 578.0], [69.3, 579.0], [69.4, 579.0], [69.5, 580.0], [69.6, 581.0], [69.7, 582.0], [69.8, 583.0], [69.9, 583.0], [70.0, 584.0], [70.1, 584.0], [70.2, 586.0], [70.3, 588.0], [70.4, 590.0], [70.5, 592.0], [70.6, 592.0], [70.7, 593.0], [70.8, 594.0], [70.9, 595.0], [71.0, 595.0], [71.1, 595.0], [71.2, 595.0], [71.3, 596.0], [71.4, 596.0], [71.5, 597.0], [71.6, 597.0], [71.7, 599.0], [71.8, 600.0], [71.9, 601.0], [72.0, 601.0], [72.1, 601.0], [72.2, 601.0], [72.3, 601.0], [72.4, 602.0], [72.5, 602.0], [72.6, 604.0], [72.7, 609.0], [72.8, 611.0], [72.9, 611.0], [73.0, 613.0], [73.1, 618.0], [73.2, 623.0], [73.3, 623.0], [73.4, 623.0], [73.5, 624.0], [73.6, 624.0], [73.7, 625.0], [73.8, 625.0], [73.9, 625.0], [74.0, 625.0], [74.1, 626.0], [74.2, 626.0], [74.3, 626.0], [74.4, 627.0], [74.5, 627.0], [74.6, 627.0], [74.7, 627.0], [74.8, 627.0], [74.9, 627.0], [75.0, 628.0], [75.1, 629.0], [75.2, 629.0], [75.3, 629.0], [75.4, 629.0], [75.5, 631.0], [75.6, 631.0], [75.7, 631.0], [75.8, 632.0], [75.9, 632.0], [76.0, 632.0], [76.1, 632.0], [76.2, 632.0], [76.3, 633.0], [76.4, 633.0], [76.5, 633.0], [76.6, 634.0], [76.7, 634.0], [76.8, 634.0], [76.9, 634.0], [77.0, 634.0], [77.1, 634.0], [77.2, 634.0], [77.3, 635.0], [77.4, 635.0], [77.5, 635.0], [77.6, 635.0], [77.7, 635.0], [77.8, 635.0], [77.9, 636.0], [78.0, 636.0], [78.1, 636.0], [78.2, 636.0], [78.3, 637.0], [78.4, 637.0], [78.5, 637.0], [78.6, 637.0], [78.7, 637.0], [78.8, 637.0], [78.9, 638.0], [79.0, 638.0], [79.1, 638.0], [79.2, 638.0], [79.3, 638.0], [79.4, 638.0], [79.5, 638.0], [79.6, 638.0], [79.7, 639.0], [79.8, 639.0], [79.9, 639.0], [80.0, 639.0], [80.1, 639.0], [80.2, 640.0], [80.3, 640.0], [80.4, 640.0], [80.5, 640.0], [80.6, 640.0], [80.7, 640.0], [80.8, 641.0], [80.9, 642.0], [81.0, 643.0], [81.1, 645.0], [81.2, 645.0], [81.3, 645.0], [81.4, 645.0], [81.5, 646.0], [81.6, 647.0], [81.7, 647.0], [81.8, 647.0], [81.9, 647.0], [82.0, 649.0], [82.1, 650.0], [82.2, 651.0], [82.3, 651.0], [82.4, 652.0], [82.5, 652.0], [82.6, 652.0], [82.7, 652.0], [82.8, 652.0], [82.9, 652.0], [83.0, 653.0], [83.1, 653.0], [83.2, 653.0], [83.3, 654.0], [83.4, 654.0], [83.5, 655.0], [83.6, 655.0], [83.7, 655.0], [83.8, 655.0], [83.9, 656.0], [84.0, 656.0], [84.1, 656.0], [84.2, 656.0], [84.3, 656.0], [84.4, 656.0], [84.5, 657.0], [84.6, 657.0], [84.7, 657.0], [84.8, 657.0], [84.9, 657.0], [85.0, 658.0], [85.1, 658.0], [85.2, 659.0], [85.3, 659.0], [85.4, 659.0], [85.5, 659.0], [85.6, 659.0], [85.7, 659.0], [85.8, 659.0], [85.9, 659.0], [86.0, 659.0], [86.1, 660.0], [86.2, 660.0], [86.3, 660.0], [86.4, 660.0], [86.5, 661.0], [86.6, 661.0], [86.7, 661.0], [86.8, 662.0], [86.9, 662.0], [87.0, 662.0], [87.1, 662.0], [87.2, 662.0], [87.3, 662.0], [87.4, 662.0], [87.5, 663.0], [87.6, 663.0], [87.7, 663.0], [87.8, 663.0], [87.9, 663.0], [88.0, 663.0], [88.1, 663.0], [88.2, 664.0], [88.3, 664.0], [88.4, 664.0], [88.5, 664.0], [88.6, 664.0], [88.7, 665.0], [88.8, 666.0], [88.9, 667.0], [89.0, 667.0], [89.1, 667.0], [89.2, 667.0], [89.3, 667.0], [89.4, 668.0], [89.5, 668.0], [89.6, 668.0], [89.7, 668.0], [89.8, 668.0], [89.9, 668.0], [90.0, 668.0], [90.1, 669.0], [90.2, 669.0], [90.3, 669.0], [90.4, 669.0], [90.5, 669.0], [90.6, 669.0], [90.7, 669.0], [90.8, 669.0], [90.9, 669.0], [91.0, 669.0], [91.1, 669.0], [91.2, 670.0], [91.3, 670.0], [91.4, 670.0], [91.5, 670.0], [91.6, 670.0], [91.7, 670.0], [91.8, 670.0], [91.9, 671.0], [92.0, 671.0], [92.1, 671.0], [92.2, 671.0], [92.3, 671.0], [92.4, 672.0], [92.5, 672.0], [92.6, 672.0], [92.7, 672.0], [92.8, 672.0], [92.9, 673.0], [93.0, 674.0], [93.1, 675.0], [93.2, 675.0], [93.3, 675.0], [93.4, 677.0], [93.5, 677.0], [93.6, 677.0], [93.7, 678.0], [93.8, 678.0], [93.9, 678.0], [94.0, 679.0], [94.1, 680.0], [94.2, 681.0], [94.3, 681.0], [94.4, 681.0], [94.5, 682.0], [94.6, 682.0], [94.7, 683.0], [94.8, 683.0], [94.9, 683.0], [95.0, 683.0], [95.1, 683.0], [95.2, 683.0], [95.3, 686.0], [95.4, 687.0], [95.5, 687.0], [95.6, 687.0], [95.7, 692.0], [95.8, 693.0], [95.9, 693.0], [96.0, 703.0], [96.1, 704.0], [96.2, 704.0], [96.3, 706.0], [96.4, 706.0], [96.5, 710.0], [96.6, 711.0], [96.7, 713.0], [96.8, 714.0], [96.9, 714.0], [97.0, 714.0], [97.1, 714.0], [97.2, 714.0], [97.3, 715.0], [97.4, 715.0], [97.5, 715.0], [97.6, 716.0], [97.7, 716.0], [97.8, 716.0], [97.9, 717.0], [98.0, 717.0], [98.1, 718.0], [98.2, 718.0], [98.3, 718.0], [98.4, 718.0], [98.5, 719.0], [98.6, 719.0], [98.7, 720.0], [98.8, 720.0], [98.9, 720.0], [99.0, 721.0], [99.1, 721.0], [99.2, 721.0], [99.3, 721.0], [99.4, 721.0], [99.5, 723.0], [99.6, 723.0], [99.7, 737.0], [99.8, 738.0], [99.9, 739.0], [100.0, 741.0]], "isOverall": false, "label": "PHP-1", "isController": false}, {"data": [[0.0, 7.0], [0.1, 7.0], [0.2, 8.0], [0.3, 8.0], [0.4, 8.0], [0.5, 8.0], [0.6, 8.0], [0.7, 8.0], [0.8, 8.0], [0.9, 8.0], [1.0, 8.0], [1.1, 8.0], [1.2, 8.0], [1.3, 8.0], [1.4, 8.0], [1.5, 8.0], [1.6, 8.0], [1.7, 8.0], [1.8, 9.0], [1.9, 9.0], [2.0, 9.0], [2.1, 9.0], [2.2, 9.0], [2.3, 9.0], [2.4, 9.0], [2.5, 9.0], [2.6, 9.0], [2.7, 9.0], [2.8, 9.0], [2.9, 9.0], [3.0, 9.0], [3.1, 9.0], [3.2, 9.0], [3.3, 9.0], [3.4, 9.0], [3.5, 9.0], [3.6, 9.0], [3.7, 9.0], [3.8, 9.0], [3.9, 9.0], [4.0, 9.0], [4.1, 9.0], [4.2, 9.0], [4.3, 9.0], [4.4, 9.0], [4.5, 10.0], [4.6, 10.0], [4.7, 10.0], [4.8, 10.0], [4.9, 10.0], [5.0, 10.0], [5.1, 10.0], [5.2, 10.0], [5.3, 10.0], [5.4, 10.0], [5.5, 10.0], [5.6, 11.0], [5.7, 11.0], [5.8, 11.0], [5.9, 11.0], [6.0, 11.0], [6.1, 11.0], [6.2, 12.0], [6.3, 12.0], [6.4, 12.0], [6.5, 12.0], [6.6, 13.0], [6.7, 13.0], [6.8, 13.0], [6.9, 13.0], [7.0, 14.0], [7.1, 14.0], [7.2, 14.0], [7.3, 14.0], [7.4, 14.0], [7.5, 15.0], [7.6, 15.0], [7.7, 15.0], [7.8, 15.0], [7.9, 15.0], [8.0, 15.0], [8.1, 16.0], [8.2, 16.0], [8.3, 16.0], [8.4, 16.0], [8.5, 16.0], [8.6, 17.0], [8.7, 17.0], [8.8, 17.0], [8.9, 17.0], [9.0, 17.0], [9.1, 17.0], [9.2, 17.0], [9.3, 17.0], [9.4, 17.0], [9.5, 17.0], [9.6, 18.0], [9.7, 18.0], [9.8, 18.0], [9.9, 18.0], [10.0, 18.0], [10.1, 18.0], [10.2, 18.0], [10.3, 19.0], [10.4, 19.0], [10.5, 19.0], [10.6, 19.0], [10.7, 19.0], [10.8, 20.0], [10.9, 20.0], [11.0, 20.0], [11.1, 20.0], [11.2, 21.0], [11.3, 21.0], [11.4, 21.0], [11.5, 21.0], [11.6, 21.0], [11.7, 22.0], [11.8, 22.0], [11.9, 22.0], [12.0, 22.0], [12.1, 22.0], [12.2, 23.0], [12.3, 23.0], [12.4, 23.0], [12.5, 23.0], [12.6, 24.0], [12.7, 24.0], [12.8, 24.0], [12.9, 24.0], [13.0, 25.0], [13.1, 25.0], [13.2, 25.0], [13.3, 25.0], [13.4, 25.0], [13.5, 26.0], [13.6, 26.0], [13.7, 26.0], [13.8, 26.0], [13.9, 26.0], [14.0, 27.0], [14.1, 27.0], [14.2, 28.0], [14.3, 28.0], [14.4, 28.0], [14.5, 29.0], [14.6, 29.0], [14.7, 29.0], [14.8, 30.0], [14.9, 30.0], [15.0, 30.0], [15.1, 30.0], [15.2, 30.0], [15.3, 31.0], [15.4, 31.0], [15.5, 31.0], [15.6, 32.0], [15.7, 32.0], [15.8, 33.0], [15.9, 33.0], [16.0, 34.0], [16.1, 34.0], [16.2, 35.0], [16.3, 35.0], [16.4, 36.0], [16.5, 37.0], [16.6, 37.0], [16.7, 38.0], [16.8, 38.0], [16.9, 39.0], [17.0, 40.0], [17.1, 41.0], [17.2, 42.0], [17.3, 42.0], [17.4, 43.0], [17.5, 45.0], [17.6, 46.0], [17.7, 47.0], [17.8, 48.0], [17.9, 49.0], [18.0, 50.0], [18.1, 51.0], [18.2, 52.0], [18.3, 53.0], [18.4, 54.0], [18.5, 55.0], [18.6, 57.0], [18.7, 59.0], [18.8, 60.0], [18.9, 63.0], [19.0, 64.0], [19.1, 66.0], [19.2, 68.0], [19.3, 70.0], [19.4, 71.0], [19.5, 73.0], [19.6, 74.0], [19.7, 76.0], [19.8, 77.0], [19.9, 80.0], [20.0, 80.0], [20.1, 81.0], [20.2, 82.0], [20.3, 84.0], [20.4, 86.0], [20.5, 88.0], [20.6, 89.0], [20.7, 90.0], [20.8, 91.0], [20.9, 95.0], [21.0, 96.0], [21.1, 97.0], [21.2, 98.0], [21.3, 101.0], [21.4, 104.0], [21.5, 105.0], [21.6, 108.0], [21.7, 108.0], [21.8, 111.0], [21.9, 113.0], [22.0, 115.0], [22.1, 119.0], [22.2, 122.0], [22.3, 123.0], [22.4, 125.0], [22.5, 126.0], [22.6, 127.0], [22.7, 129.0], [22.8, 131.0], [22.9, 133.0], [23.0, 134.0], [23.1, 136.0], [23.2, 139.0], [23.3, 141.0], [23.4, 143.0], [23.5, 144.0], [23.6, 146.0], [23.7, 149.0], [23.8, 150.0], [23.9, 152.0], [24.0, 156.0], [24.1, 157.0], [24.2, 160.0], [24.3, 162.0], [24.4, 165.0], [24.5, 166.0], [24.6, 169.0], [24.7, 170.0], [24.8, 172.0], [24.9, 177.0], [25.0, 178.0], [25.1, 180.0], [25.2, 184.0], [25.3, 187.0], [25.4, 189.0], [25.5, 191.0], [25.6, 193.0], [25.7, 195.0], [25.8, 197.0], [25.9, 199.0], [26.0, 202.0], [26.1, 204.0], [26.2, 206.0], [26.3, 207.0], [26.4, 210.0], [26.5, 212.0], [26.6, 214.0], [26.7, 215.0], [26.8, 219.0], [26.9, 221.0], [27.0, 223.0], [27.1, 225.0], [27.2, 227.0], [27.3, 229.0], [27.4, 232.0], [27.5, 234.0], [27.6, 235.0], [27.7, 237.0], [27.8, 240.0], [27.9, 242.0], [28.0, 246.0], [28.1, 248.0], [28.2, 251.0], [28.3, 254.0], [28.4, 256.0], [28.5, 257.0], [28.6, 258.0], [28.7, 261.0], [28.8, 262.0], [28.9, 265.0], [29.0, 266.0], [29.1, 268.0], [29.2, 270.0], [29.3, 272.0], [29.4, 273.0], [29.5, 274.0], [29.6, 275.0], [29.7, 276.0], [29.8, 278.0], [29.9, 280.0], [30.0, 281.0], [30.1, 282.0], [30.2, 283.0], [30.3, 285.0], [30.4, 287.0], [30.5, 289.0], [30.6, 290.0], [30.7, 292.0], [30.8, 293.0], [30.9, 295.0], [31.0, 296.0], [31.1, 298.0], [31.2, 299.0], [31.3, 301.0], [31.4, 303.0], [31.5, 305.0], [31.6, 307.0], [31.7, 311.0], [31.8, 312.0], [31.9, 313.0], [32.0, 314.0], [32.1, 316.0], [32.2, 317.0], [32.3, 319.0], [32.4, 321.0], [32.5, 323.0], [32.6, 324.0], [32.7, 325.0], [32.8, 326.0], [32.9, 327.0], [33.0, 329.0], [33.1, 331.0], [33.2, 332.0], [33.3, 333.0], [33.4, 335.0], [33.5, 337.0], [33.6, 338.0], [33.7, 339.0], [33.8, 341.0], [33.9, 342.0], [34.0, 344.0], [34.1, 345.0], [34.2, 345.0], [34.3, 347.0], [34.4, 348.0], [34.5, 348.0], [34.6, 350.0], [34.7, 350.0], [34.8, 352.0], [34.9, 353.0], [35.0, 355.0], [35.1, 356.0], [35.2, 356.0], [35.3, 357.0], [35.4, 358.0], [35.5, 358.0], [35.6, 361.0], [35.7, 362.0], [35.8, 362.0], [35.9, 363.0], [36.0, 365.0], [36.1, 366.0], [36.2, 367.0], [36.3, 368.0], [36.4, 369.0], [36.5, 370.0], [36.6, 371.0], [36.7, 373.0], [36.8, 374.0], [36.9, 375.0], [37.0, 376.0], [37.1, 378.0], [37.2, 379.0], [37.3, 380.0], [37.4, 382.0], [37.5, 382.0], [37.6, 385.0], [37.7, 386.0], [37.8, 387.0], [37.9, 388.0], [38.0, 389.0], [38.1, 391.0], [38.2, 392.0], [38.3, 393.0], [38.4, 394.0], [38.5, 395.0], [38.6, 397.0], [38.7, 398.0], [38.8, 399.0], [38.9, 400.0], [39.0, 401.0], [39.1, 402.0], [39.2, 404.0], [39.3, 405.0], [39.4, 406.0], [39.5, 408.0], [39.6, 409.0], [39.7, 410.0], [39.8, 411.0], [39.9, 412.0], [40.0, 413.0], [40.1, 414.0], [40.2, 416.0], [40.3, 417.0], [40.4, 419.0], [40.5, 419.0], [40.6, 420.0], [40.7, 421.0], [40.8, 422.0], [40.9, 425.0], [41.0, 425.0], [41.1, 426.0], [41.2, 428.0], [41.3, 429.0], [41.4, 430.0], [41.5, 432.0], [41.6, 434.0], [41.7, 435.0], [41.8, 437.0], [41.9, 438.0], [42.0, 439.0], [42.1, 440.0], [42.2, 443.0], [42.3, 443.0], [42.4, 444.0], [42.5, 446.0], [42.6, 447.0], [42.7, 448.0], [42.8, 448.0], [42.9, 448.0], [43.0, 450.0], [43.1, 451.0], [43.2, 454.0], [43.3, 455.0], [43.4, 456.0], [43.5, 457.0], [43.6, 458.0], [43.7, 458.0], [43.8, 460.0], [43.9, 461.0], [44.0, 463.0], [44.1, 464.0], [44.2, 464.0], [44.3, 465.0], [44.4, 466.0], [44.5, 467.0], [44.6, 468.0], [44.7, 470.0], [44.8, 471.0], [44.9, 471.0], [45.0, 473.0], [45.1, 475.0], [45.2, 476.0], [45.3, 477.0], [45.4, 478.0], [45.5, 479.0], [45.6, 480.0], [45.7, 481.0], [45.8, 483.0], [45.9, 485.0], [46.0, 485.0], [46.1, 486.0], [46.2, 487.0], [46.3, 488.0], [46.4, 490.0], [46.5, 492.0], [46.6, 493.0], [46.7, 495.0], [46.8, 496.0], [46.9, 496.0], [47.0, 498.0], [47.1, 499.0], [47.2, 500.0], [47.3, 501.0], [47.4, 502.0], [47.5, 503.0], [47.6, 503.0], [47.7, 504.0], [47.8, 505.0], [47.9, 506.0], [48.0, 508.0], [48.1, 508.0], [48.2, 509.0], [48.3, 510.0], [48.4, 511.0], [48.5, 512.0], [48.6, 512.0], [48.7, 513.0], [48.8, 515.0], [48.9, 516.0], [49.0, 517.0], [49.1, 518.0], [49.2, 519.0], [49.3, 520.0], [49.4, 520.0], [49.5, 521.0], [49.6, 522.0], [49.7, 522.0], [49.8, 523.0], [49.9, 524.0], [50.0, 525.0], [50.1, 526.0], [50.2, 528.0], [50.3, 528.0], [50.4, 529.0], [50.5, 530.0], [50.6, 531.0], [50.7, 532.0], [50.8, 533.0], [50.9, 535.0], [51.0, 536.0], [51.1, 536.0], [51.2, 537.0], [51.3, 538.0], [51.4, 539.0], [51.5, 541.0], [51.6, 543.0], [51.7, 543.0], [51.8, 544.0], [51.9, 544.0], [52.0, 545.0], [52.1, 547.0], [52.2, 548.0], [52.3, 549.0], [52.4, 550.0], [52.5, 550.0], [52.6, 550.0], [52.7, 551.0], [52.8, 551.0], [52.9, 552.0], [53.0, 552.0], [53.1, 553.0], [53.2, 555.0], [53.3, 555.0], [53.4, 557.0], [53.5, 557.0], [53.6, 558.0], [53.7, 558.0], [53.8, 559.0], [53.9, 559.0], [54.0, 560.0], [54.1, 561.0], [54.2, 562.0], [54.3, 563.0], [54.4, 565.0], [54.5, 565.0], [54.6, 566.0], [54.7, 566.0], [54.8, 566.0], [54.9, 567.0], [55.0, 568.0], [55.1, 568.0], [55.2, 569.0], [55.3, 570.0], [55.4, 570.0], [55.5, 571.0], [55.6, 571.0], [55.7, 572.0], [55.8, 573.0], [55.9, 573.0], [56.0, 574.0], [56.1, 575.0], [56.2, 576.0], [56.3, 576.0], [56.4, 577.0], [56.5, 577.0], [56.6, 578.0], [56.7, 578.0], [56.8, 579.0], [56.9, 579.0], [57.0, 580.0], [57.1, 581.0], [57.2, 582.0], [57.3, 583.0], [57.4, 583.0], [57.5, 584.0], [57.6, 585.0], [57.7, 585.0], [57.8, 586.0], [57.9, 587.0], [58.0, 587.0], [58.1, 588.0], [58.2, 589.0], [58.3, 590.0], [58.4, 590.0], [58.5, 591.0], [58.6, 592.0], [58.7, 593.0], [58.8, 593.0], [58.9, 594.0], [59.0, 594.0], [59.1, 595.0], [59.2, 595.0], [59.3, 596.0], [59.4, 597.0], [59.5, 597.0], [59.6, 598.0], [59.7, 599.0], [59.8, 599.0], [59.9, 600.0], [60.0, 600.0], [60.1, 601.0], [60.2, 602.0], [60.3, 603.0], [60.4, 603.0], [60.5, 604.0], [60.6, 604.0], [60.7, 606.0], [60.8, 606.0], [60.9, 607.0], [61.0, 607.0], [61.1, 608.0], [61.2, 608.0], [61.3, 609.0], [61.4, 610.0], [61.5, 611.0], [61.6, 612.0], [61.7, 612.0], [61.8, 613.0], [61.9, 614.0], [62.0, 616.0], [62.1, 616.0], [62.2, 617.0], [62.3, 618.0], [62.4, 618.0], [62.5, 619.0], [62.6, 620.0], [62.7, 621.0], [62.8, 621.0], [62.9, 621.0], [63.0, 622.0], [63.1, 623.0], [63.2, 624.0], [63.3, 625.0], [63.4, 627.0], [63.5, 627.0], [63.6, 628.0], [63.7, 629.0], [63.8, 630.0], [63.9, 630.0], [64.0, 631.0], [64.1, 631.0], [64.2, 632.0], [64.3, 633.0], [64.4, 634.0], [64.5, 634.0], [64.6, 635.0], [64.7, 636.0], [64.8, 636.0], [64.9, 637.0], [65.0, 638.0], [65.1, 638.0], [65.2, 639.0], [65.3, 639.0], [65.4, 640.0], [65.5, 640.0], [65.6, 640.0], [65.7, 641.0], [65.8, 641.0], [65.9, 642.0], [66.0, 643.0], [66.1, 643.0], [66.2, 645.0], [66.3, 646.0], [66.4, 646.0], [66.5, 647.0], [66.6, 647.0], [66.7, 648.0], [66.8, 648.0], [66.9, 648.0], [67.0, 648.0], [67.1, 649.0], [67.2, 649.0], [67.3, 649.0], [67.4, 650.0], [67.5, 651.0], [67.6, 651.0], [67.7, 652.0], [67.8, 654.0], [67.9, 654.0], [68.0, 655.0], [68.1, 656.0], [68.2, 657.0], [68.3, 658.0], [68.4, 658.0], [68.5, 659.0], [68.6, 659.0], [68.7, 659.0], [68.8, 660.0], [68.9, 661.0], [69.0, 661.0], [69.1, 661.0], [69.2, 662.0], [69.3, 662.0], [69.4, 662.0], [69.5, 663.0], [69.6, 665.0], [69.7, 665.0], [69.8, 666.0], [69.9, 667.0], [70.0, 668.0], [70.1, 670.0], [70.2, 671.0], [70.3, 672.0], [70.4, 672.0], [70.5, 673.0], [70.6, 674.0], [70.7, 675.0], [70.8, 675.0], [70.9, 676.0], [71.0, 677.0], [71.1, 679.0], [71.2, 679.0], [71.3, 680.0], [71.4, 681.0], [71.5, 682.0], [71.6, 682.0], [71.7, 683.0], [71.8, 683.0], [71.9, 684.0], [72.0, 684.0], [72.1, 685.0], [72.2, 685.0], [72.3, 686.0], [72.4, 686.0], [72.5, 687.0], [72.6, 689.0], [72.7, 690.0], [72.8, 691.0], [72.9, 692.0], [73.0, 693.0], [73.1, 694.0], [73.2, 695.0], [73.3, 695.0], [73.4, 696.0], [73.5, 697.0], [73.6, 698.0], [73.7, 698.0], [73.8, 699.0], [73.9, 700.0], [74.0, 701.0], [74.1, 701.0], [74.2, 701.0], [74.3, 702.0], [74.4, 702.0], [74.5, 703.0], [74.6, 703.0], [74.7, 704.0], [74.8, 706.0], [74.9, 707.0], [75.0, 709.0], [75.1, 710.0], [75.2, 710.0], [75.3, 713.0], [75.4, 714.0], [75.5, 715.0], [75.6, 716.0], [75.7, 717.0], [75.8, 718.0], [75.9, 718.0], [76.0, 720.0], [76.1, 721.0], [76.2, 721.0], [76.3, 722.0], [76.4, 723.0], [76.5, 724.0], [76.6, 726.0], [76.7, 727.0], [76.8, 729.0], [76.9, 733.0], [77.0, 734.0], [77.1, 736.0], [77.2, 739.0], [77.3, 742.0], [77.4, 746.0], [77.5, 748.0], [77.6, 749.0], [77.7, 752.0], [77.8, 758.0], [77.9, 759.0], [78.0, 761.0], [78.1, 764.0], [78.2, 768.0], [78.3, 769.0], [78.4, 769.0], [78.5, 776.0], [78.6, 777.0], [78.7, 783.0], [78.8, 787.0], [78.9, 789.0], [79.0, 793.0], [79.1, 796.0], [79.2, 799.0], [79.3, 801.0], [79.4, 807.0], [79.5, 812.0], [79.6, 815.0], [79.7, 816.0], [79.8, 819.0], [79.9, 823.0], [80.0, 826.0], [80.1, 829.0], [80.2, 834.0], [80.3, 837.0], [80.4, 842.0], [80.5, 847.0], [80.6, 850.0], [80.7, 856.0], [80.8, 857.0], [80.9, 859.0], [81.0, 862.0], [81.1, 864.0], [81.2, 866.0], [81.3, 873.0], [81.4, 874.0], [81.5, 880.0], [81.6, 881.0], [81.7, 883.0], [81.8, 886.0], [81.9, 893.0], [82.0, 894.0], [82.1, 897.0], [82.2, 899.0], [82.3, 900.0], [82.4, 903.0], [82.5, 906.0], [82.6, 908.0], [82.7, 912.0], [82.8, 914.0], [82.9, 915.0], [83.0, 916.0], [83.1, 917.0], [83.2, 918.0], [83.3, 927.0], [83.4, 932.0], [83.5, 938.0], [83.6, 946.0], [83.7, 948.0], [83.8, 951.0], [83.9, 955.0], [84.0, 958.0], [84.1, 960.0], [84.2, 962.0], [84.3, 967.0], [84.4, 968.0], [84.5, 974.0], [84.6, 976.0], [84.7, 979.0], [84.8, 980.0], [84.9, 984.0], [85.0, 985.0], [85.1, 988.0], [85.2, 998.0], [85.3, 1001.0], [85.4, 1005.0], [85.5, 1013.0], [85.6, 1019.0], [85.7, 1023.0], [85.8, 1035.0], [85.9, 1045.0], [86.0, 1053.0], [86.1, 1060.0], [86.2, 1065.0], [86.3, 1076.0], [86.4, 1096.0], [86.5, 1111.0], [86.6, 1120.0], [86.7, 1123.0], [86.8, 1130.0], [86.9, 1132.0], [87.0, 1137.0], [87.1, 1141.0], [87.2, 1149.0], [87.3, 1151.0], [87.4, 1153.0], [87.5, 1156.0], [87.6, 1162.0], [87.7, 1173.0], [87.8, 1184.0], [87.9, 1200.0], [88.0, 1208.0], [88.1, 1220.0], [88.2, 1248.0], [88.3, 1259.0], [88.4, 1261.0], [88.5, 1266.0], [88.6, 1268.0], [88.7, 1278.0], [88.8, 1281.0], [88.9, 1284.0], [89.0, 1287.0], [89.1, 1290.0], [89.2, 1291.0], [89.3, 1293.0], [89.4, 1294.0], [89.5, 1295.0], [89.6, 1295.0], [89.7, 1297.0], [89.8, 1301.0], [89.9, 1303.0], [90.0, 1307.0], [90.1, 1310.0], [90.2, 1312.0], [90.3, 1313.0], [90.4, 1316.0], [90.5, 1317.0], [90.6, 1318.0], [90.7, 1320.0], [90.8, 1323.0], [90.9, 1325.0], [91.0, 1326.0], [91.1, 1329.0], [91.2, 1332.0], [91.3, 1334.0], [91.4, 1336.0], [91.5, 1342.0], [91.6, 1358.0], [91.7, 1370.0], [91.8, 1377.0], [91.9, 1381.0], [92.0, 1385.0], [92.1, 1393.0], [92.2, 1395.0], [92.3, 1401.0], [92.4, 1548.0], [92.5, 1785.0], [92.6, 1970.0], [92.7, 2158.0], [92.8, 2349.0], [92.9, 2550.0], [93.0, 2769.0], [93.1, 2957.0], [93.2, 3149.0], [93.3, 3341.0], [93.4, 3516.0], [93.5, 3638.0], [93.6, 3653.0], [93.7, 3671.0], [93.8, 3681.0], [93.9, 3718.0], [94.0, 3779.0], [94.1, 3808.0], [94.2, 3848.0], [94.3, 3899.0], [94.4, 3953.0], [94.5, 4007.0], [94.6, 4059.0], [94.7, 4126.0], [94.8, 4163.0], [94.9, 4252.0], [95.0, 4289.0], [95.1, 4299.0], [95.2, 4323.0], [95.3, 4330.0], [95.4, 4387.0], [95.5, 4435.0], [95.6, 4438.0], [95.7, 4440.0], [95.8, 4481.0], [95.9, 4487.0], [96.0, 4490.0], [96.1, 4498.0], [96.2, 4571.0], [96.3, 4597.0], [96.4, 4598.0], [96.5, 4601.0], [96.6, 4633.0], [96.7, 4636.0], [96.8, 4637.0], [96.9, 4638.0], [97.0, 4639.0], [97.1, 4641.0], [97.2, 4642.0], [97.3, 4644.0], [97.4, 4646.0], [97.5, 4648.0], [97.6, 4656.0], [97.7, 4665.0], [97.8, 4668.0], [97.9, 4674.0], [98.0, 4676.0], [98.1, 4677.0], [98.2, 4679.0], [98.3, 4690.0], [98.4, 4730.0], [98.5, 4734.0], [98.6, 4735.0], [98.7, 4738.0], [98.8, 4751.0], [98.9, 4772.0], [99.0, 4778.0], [99.1, 4781.0], [99.2, 4783.0], [99.3, 4785.0], [99.4, 4787.0], [99.5, 4790.0], [99.6, 4793.0], [99.7, 4810.0], [99.8, 4818.0], [99.9, 4820.0]], "isOverall": false, "label": "PHP", "isController": false}, {"data": [[0.0, 2.0], [0.1, 2.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 3.0], [3.8, 3.0], [3.9, 3.0], [4.0, 3.0], [4.1, 3.0], [4.2, 3.0], [4.3, 3.0], [4.4, 3.0], [4.5, 3.0], [4.6, 3.0], [4.7, 3.0], [4.8, 3.0], [4.9, 3.0], [5.0, 3.0], [5.1, 3.0], [5.2, 3.0], [5.3, 3.0], [5.4, 3.0], [5.5, 3.0], [5.6, 3.0], [5.7, 3.0], [5.8, 3.0], [5.9, 3.0], [6.0, 3.0], [6.1, 3.0], [6.2, 3.0], [6.3, 3.0], [6.4, 3.0], [6.5, 3.0], [6.6, 3.0], [6.7, 3.0], [6.8, 3.0], [6.9, 3.0], [7.0, 3.0], [7.1, 3.0], [7.2, 3.0], [7.3, 3.0], [7.4, 3.0], [7.5, 3.0], [7.6, 3.0], [7.7, 3.0], [7.8, 3.0], [7.9, 3.0], [8.0, 3.0], [8.1, 3.0], [8.2, 3.0], [8.3, 3.0], [8.4, 3.0], [8.5, 3.0], [8.6, 3.0], [8.7, 3.0], [8.8, 3.0], [8.9, 3.0], [9.0, 3.0], [9.1, 3.0], [9.2, 3.0], [9.3, 3.0], [9.4, 3.0], [9.5, 3.0], [9.6, 3.0], [9.7, 3.0], [9.8, 3.0], [9.9, 3.0], [10.0, 3.0], [10.1, 3.0], [10.2, 3.0], [10.3, 3.0], [10.4, 3.0], [10.5, 3.0], [10.6, 3.0], [10.7, 3.0], [10.8, 3.0], [10.9, 3.0], [11.0, 3.0], [11.1, 3.0], [11.2, 3.0], [11.3, 3.0], [11.4, 3.0], [11.5, 3.0], [11.6, 3.0], [11.7, 3.0], [11.8, 3.0], [11.9, 3.0], [12.0, 3.0], [12.1, 3.0], [12.2, 3.0], [12.3, 3.0], [12.4, 3.0], [12.5, 3.0], [12.6, 3.0], [12.7, 3.0], [12.8, 3.0], [12.9, 3.0], [13.0, 3.0], [13.1, 3.0], [13.2, 3.0], [13.3, 3.0], [13.4, 3.0], [13.5, 3.0], [13.6, 3.0], [13.7, 3.0], [13.8, 3.0], [13.9, 3.0], [14.0, 3.0], [14.1, 3.0], [14.2, 3.0], [14.3, 3.0], [14.4, 3.0], [14.5, 3.0], [14.6, 3.0], [14.7, 3.0], [14.8, 3.0], [14.9, 3.0], [15.0, 3.0], [15.1, 3.0], [15.2, 3.0], [15.3, 3.0], [15.4, 3.0], [15.5, 3.0], [15.6, 3.0], [15.7, 3.0], [15.8, 3.0], [15.9, 3.0], [16.0, 3.0], [16.1, 3.0], [16.2, 3.0], [16.3, 3.0], [16.4, 3.0], [16.5, 3.0], [16.6, 3.0], [16.7, 3.0], [16.8, 3.0], [16.9, 3.0], [17.0, 3.0], [17.1, 3.0], [17.2, 3.0], [17.3, 3.0], [17.4, 3.0], [17.5, 3.0], [17.6, 3.0], [17.7, 3.0], [17.8, 3.0], [17.9, 3.0], [18.0, 3.0], [18.1, 3.0], [18.2, 3.0], [18.3, 3.0], [18.4, 3.0], [18.5, 3.0], [18.6, 3.0], [18.7, 3.0], [18.8, 3.0], [18.9, 3.0], [19.0, 3.0], [19.1, 3.0], [19.2, 3.0], [19.3, 3.0], [19.4, 3.0], [19.5, 3.0], [19.6, 3.0], [19.7, 3.0], [19.8, 3.0], [19.9, 3.0], [20.0, 3.0], [20.1, 3.0], [20.2, 3.0], [20.3, 3.0], [20.4, 3.0], [20.5, 3.0], [20.6, 3.0], [20.7, 3.0], [20.8, 3.0], [20.9, 4.0], [21.0, 4.0], [21.1, 4.0], [21.2, 4.0], [21.3, 4.0], [21.4, 4.0], [21.5, 4.0], [21.6, 4.0], [21.7, 4.0], [21.8, 4.0], [21.9, 4.0], [22.0, 4.0], [22.1, 4.0], [22.2, 4.0], [22.3, 4.0], [22.4, 4.0], [22.5, 4.0], [22.6, 4.0], [22.7, 4.0], [22.8, 4.0], [22.9, 4.0], [23.0, 4.0], [23.1, 4.0], [23.2, 4.0], [23.3, 4.0], [23.4, 4.0], [23.5, 4.0], [23.6, 4.0], [23.7, 4.0], [23.8, 4.0], [23.9, 4.0], [24.0, 4.0], [24.1, 4.0], [24.2, 4.0], [24.3, 4.0], [24.4, 4.0], [24.5, 4.0], [24.6, 4.0], [24.7, 4.0], [24.8, 4.0], [24.9, 4.0], [25.0, 4.0], [25.1, 4.0], [25.2, 4.0], [25.3, 4.0], [25.4, 4.0], [25.5, 4.0], [25.6, 4.0], [25.7, 4.0], [25.8, 4.0], [25.9, 4.0], [26.0, 4.0], [26.1, 4.0], [26.2, 4.0], [26.3, 4.0], [26.4, 4.0], [26.5, 4.0], [26.6, 4.0], [26.7, 4.0], [26.8, 4.0], [26.9, 4.0], [27.0, 4.0], [27.1, 4.0], [27.2, 4.0], [27.3, 4.0], [27.4, 4.0], [27.5, 4.0], [27.6, 4.0], [27.7, 4.0], [27.8, 4.0], [27.9, 4.0], [28.0, 4.0], [28.1, 4.0], [28.2, 4.0], [28.3, 4.0], [28.4, 4.0], [28.5, 4.0], [28.6, 4.0], [28.7, 4.0], [28.8, 4.0], [28.9, 4.0], [29.0, 4.0], [29.1, 4.0], [29.2, 4.0], [29.3, 4.0], [29.4, 4.0], [29.5, 4.0], [29.6, 4.0], [29.7, 4.0], [29.8, 4.0], [29.9, 4.0], [30.0, 4.0], [30.1, 4.0], [30.2, 4.0], [30.3, 4.0], [30.4, 4.0], [30.5, 4.0], [30.6, 4.0], [30.7, 4.0], [30.8, 4.0], [30.9, 4.0], [31.0, 4.0], [31.1, 4.0], [31.2, 4.0], [31.3, 4.0], [31.4, 4.0], [31.5, 4.0], [31.6, 4.0], [31.7, 4.0], [31.8, 4.0], [31.9, 4.0], [32.0, 4.0], [32.1, 4.0], [32.2, 4.0], [32.3, 4.0], [32.4, 4.0], [32.5, 4.0], [32.6, 4.0], [32.7, 4.0], [32.8, 4.0], [32.9, 4.0], [33.0, 4.0], [33.1, 4.0], [33.2, 4.0], [33.3, 4.0], [33.4, 4.0], [33.5, 4.0], [33.6, 4.0], [33.7, 4.0], [33.8, 4.0], [33.9, 4.0], [34.0, 4.0], [34.1, 4.0], [34.2, 4.0], [34.3, 4.0], [34.4, 4.0], [34.5, 4.0], [34.6, 4.0], [34.7, 4.0], [34.8, 4.0], [34.9, 4.0], [35.0, 4.0], [35.1, 4.0], [35.2, 4.0], [35.3, 4.0], [35.4, 4.0], [35.5, 4.0], [35.6, 4.0], [35.7, 4.0], [35.8, 4.0], [35.9, 4.0], [36.0, 4.0], [36.1, 4.0], [36.2, 4.0], [36.3, 4.0], [36.4, 4.0], [36.5, 4.0], [36.6, 4.0], [36.7, 4.0], [36.8, 4.0], [36.9, 4.0], [37.0, 4.0], [37.1, 4.0], [37.2, 4.0], [37.3, 4.0], [37.4, 4.0], [37.5, 4.0], [37.6, 4.0], [37.7, 4.0], [37.8, 4.0], [37.9, 4.0], [38.0, 4.0], [38.1, 4.0], [38.2, 4.0], [38.3, 4.0], [38.4, 4.0], [38.5, 4.0], [38.6, 4.0], [38.7, 4.0], [38.8, 4.0], [38.9, 4.0], [39.0, 4.0], [39.1, 4.0], [39.2, 4.0], [39.3, 4.0], [39.4, 4.0], [39.5, 4.0], [39.6, 4.0], [39.7, 4.0], [39.8, 4.0], [39.9, 4.0], [40.0, 4.0], [40.1, 4.0], [40.2, 4.0], [40.3, 4.0], [40.4, 4.0], [40.5, 4.0], [40.6, 4.0], [40.7, 4.0], [40.8, 4.0], [40.9, 4.0], [41.0, 4.0], [41.1, 4.0], [41.2, 4.0], [41.3, 4.0], [41.4, 4.0], [41.5, 4.0], [41.6, 4.0], [41.7, 4.0], [41.8, 4.0], [41.9, 4.0], [42.0, 4.0], [42.1, 4.0], [42.2, 4.0], [42.3, 4.0], [42.4, 4.0], [42.5, 4.0], [42.6, 4.0], [42.7, 4.0], [42.8, 4.0], [42.9, 4.0], [43.0, 4.0], [43.1, 4.0], [43.2, 4.0], [43.3, 4.0], [43.4, 4.0], [43.5, 4.0], [43.6, 4.0], [43.7, 4.0], [43.8, 4.0], [43.9, 4.0], [44.0, 4.0], [44.1, 4.0], [44.2, 4.0], [44.3, 4.0], [44.4, 4.0], [44.5, 4.0], [44.6, 4.0], [44.7, 4.0], [44.8, 4.0], [44.9, 4.0], [45.0, 4.0], [45.1, 4.0], [45.2, 4.0], [45.3, 4.0], [45.4, 4.0], [45.5, 4.0], [45.6, 4.0], [45.7, 4.0], [45.8, 4.0], [45.9, 4.0], [46.0, 4.0], [46.1, 4.0], [46.2, 4.0], [46.3, 4.0], [46.4, 4.0], [46.5, 4.0], [46.6, 4.0], [46.7, 4.0], [46.8, 4.0], [46.9, 4.0], [47.0, 5.0], [47.1, 5.0], [47.2, 5.0], [47.3, 5.0], [47.4, 5.0], [47.5, 5.0], [47.6, 5.0], [47.7, 5.0], [47.8, 5.0], [47.9, 5.0], [48.0, 5.0], [48.1, 5.0], [48.2, 5.0], [48.3, 5.0], [48.4, 5.0], [48.5, 5.0], [48.6, 5.0], [48.7, 5.0], [48.8, 5.0], [48.9, 5.0], [49.0, 5.0], [49.1, 5.0], [49.2, 5.0], [49.3, 5.0], [49.4, 5.0], [49.5, 5.0], [49.6, 5.0], [49.7, 5.0], [49.8, 5.0], [49.9, 5.0], [50.0, 5.0], [50.1, 5.0], [50.2, 5.0], [50.3, 5.0], [50.4, 5.0], [50.5, 5.0], [50.6, 5.0], [50.7, 5.0], [50.8, 5.0], [50.9, 5.0], [51.0, 5.0], [51.1, 5.0], [51.2, 5.0], [51.3, 5.0], [51.4, 5.0], [51.5, 5.0], [51.6, 5.0], [51.7, 5.0], [51.8, 5.0], [51.9, 5.0], [52.0, 5.0], [52.1, 5.0], [52.2, 5.0], [52.3, 5.0], [52.4, 5.0], [52.5, 5.0], [52.6, 5.0], [52.7, 5.0], [52.8, 5.0], [52.9, 5.0], [53.0, 5.0], [53.1, 5.0], [53.2, 5.0], [53.3, 5.0], [53.4, 5.0], [53.5, 5.0], [53.6, 5.0], [53.7, 5.0], [53.8, 5.0], [53.9, 5.0], [54.0, 5.0], [54.1, 5.0], [54.2, 5.0], [54.3, 5.0], [54.4, 5.0], [54.5, 5.0], [54.6, 5.0], [54.7, 5.0], [54.8, 5.0], [54.9, 5.0], [55.0, 5.0], [55.1, 5.0], [55.2, 5.0], [55.3, 5.0], [55.4, 5.0], [55.5, 5.0], [55.6, 5.0], [55.7, 5.0], [55.8, 5.0], [55.9, 5.0], [56.0, 5.0], [56.1, 5.0], [56.2, 5.0], [56.3, 5.0], [56.4, 5.0], [56.5, 5.0], [56.6, 5.0], [56.7, 5.0], [56.8, 5.0], [56.9, 5.0], [57.0, 5.0], [57.1, 5.0], [57.2, 5.0], [57.3, 5.0], [57.4, 5.0], [57.5, 5.0], [57.6, 5.0], [57.7, 5.0], [57.8, 5.0], [57.9, 5.0], [58.0, 5.0], [58.1, 5.0], [58.2, 5.0], [58.3, 5.0], [58.4, 5.0], [58.5, 6.0], [58.6, 6.0], [58.7, 6.0], [58.8, 6.0], [58.9, 6.0], [59.0, 6.0], [59.1, 6.0], [59.2, 6.0], [59.3, 6.0], [59.4, 6.0], [59.5, 6.0], [59.6, 6.0], [59.7, 6.0], [59.8, 6.0], [59.9, 6.0], [60.0, 6.0], [60.1, 6.0], [60.2, 6.0], [60.3, 6.0], [60.4, 6.0], [60.5, 6.0], [60.6, 6.0], [60.7, 6.0], [60.8, 6.0], [60.9, 6.0], [61.0, 6.0], [61.1, 6.0], [61.2, 6.0], [61.3, 6.0], [61.4, 6.0], [61.5, 6.0], [61.6, 6.0], [61.7, 6.0], [61.8, 6.0], [61.9, 6.0], [62.0, 6.0], [62.1, 6.0], [62.2, 6.0], [62.3, 6.0], [62.4, 6.0], [62.5, 6.0], [62.6, 6.0], [62.7, 6.0], [62.8, 6.0], [62.9, 6.0], [63.0, 6.0], [63.1, 6.0], [63.2, 6.0], [63.3, 6.0], [63.4, 6.0], [63.5, 6.0], [63.6, 6.0], [63.7, 6.0], [63.8, 6.0], [63.9, 6.0], [64.0, 6.0], [64.1, 6.0], [64.2, 6.0], [64.3, 6.0], [64.4, 6.0], [64.5, 6.0], [64.6, 6.0], [64.7, 6.0], [64.8, 6.0], [64.9, 6.0], [65.0, 6.0], [65.1, 6.0], [65.2, 6.0], [65.3, 6.0], [65.4, 6.0], [65.5, 6.0], [65.6, 6.0], [65.7, 7.0], [65.8, 7.0], [65.9, 7.0], [66.0, 7.0], [66.1, 7.0], [66.2, 7.0], [66.3, 7.0], [66.4, 7.0], [66.5, 7.0], [66.6, 7.0], [66.7, 7.0], [66.8, 7.0], [66.9, 7.0], [67.0, 7.0], [67.1, 7.0], [67.2, 7.0], [67.3, 7.0], [67.4, 7.0], [67.5, 7.0], [67.6, 7.0], [67.7, 7.0], [67.8, 7.0], [67.9, 7.0], [68.0, 7.0], [68.1, 7.0], [68.2, 7.0], [68.3, 7.0], [68.4, 7.0], [68.5, 7.0], [68.6, 7.0], [68.7, 7.0], [68.8, 7.0], [68.9, 7.0], [69.0, 7.0], [69.1, 7.0], [69.2, 7.0], [69.3, 7.0], [69.4, 7.0], [69.5, 7.0], [69.6, 7.0], [69.7, 7.0], [69.8, 7.0], [69.9, 7.0], [70.0, 7.0], [70.1, 7.0], [70.2, 7.0], [70.3, 7.0], [70.4, 7.0], [70.5, 7.0], [70.6, 7.0], [70.7, 7.0], [70.8, 7.0], [70.9, 7.0], [71.0, 7.0], [71.1, 7.0], [71.2, 7.0], [71.3, 8.0], [71.4, 8.0], [71.5, 8.0], [71.6, 8.0], [71.7, 8.0], [71.8, 8.0], [71.9, 8.0], [72.0, 8.0], [72.1, 8.0], [72.2, 8.0], [72.3, 8.0], [72.4, 8.0], [72.5, 8.0], [72.6, 8.0], [72.7, 8.0], [72.8, 8.0], [72.9, 8.0], [73.0, 8.0], [73.1, 8.0], [73.2, 8.0], [73.3, 8.0], [73.4, 8.0], [73.5, 8.0], [73.6, 8.0], [73.7, 8.0], [73.8, 8.0], [73.9, 8.0], [74.0, 8.0], [74.1, 8.0], [74.2, 8.0], [74.3, 8.0], [74.4, 8.0], [74.5, 8.0], [74.6, 8.0], [74.7, 8.0], [74.8, 8.0], [74.9, 8.0], [75.0, 8.0], [75.1, 8.0], [75.2, 8.0], [75.3, 8.0], [75.4, 8.0], [75.5, 8.0], [75.6, 8.0], [75.7, 8.0], [75.8, 8.0], [75.9, 8.0], [76.0, 8.0], [76.1, 8.0], [76.2, 8.0], [76.3, 8.0], [76.4, 8.0], [76.5, 8.0], [76.6, 8.0], [76.7, 8.0], [76.8, 9.0], [76.9, 9.0], [77.0, 9.0], [77.1, 9.0], [77.2, 9.0], [77.3, 9.0], [77.4, 9.0], [77.5, 9.0], [77.6, 9.0], [77.7, 9.0], [77.8, 9.0], [77.9, 9.0], [78.0, 9.0], [78.1, 9.0], [78.2, 9.0], [78.3, 9.0], [78.4, 9.0], [78.5, 9.0], [78.6, 9.0], [78.7, 10.0], [78.8, 10.0], [78.9, 10.0], [79.0, 10.0], [79.1, 10.0], [79.2, 10.0], [79.3, 10.0], [79.4, 10.0], [79.5, 10.0], [79.6, 10.0], [79.7, 10.0], [79.8, 11.0], [79.9, 11.0], [80.0, 11.0], [80.1, 11.0], [80.2, 12.0], [80.3, 12.0], [80.4, 12.0], [80.5, 13.0], [80.6, 13.0], [80.7, 13.0], [80.8, 14.0], [80.9, 15.0], [81.0, 15.0], [81.1, 16.0], [81.2, 18.0], [81.3, 18.0], [81.4, 18.0], [81.5, 20.0], [81.6, 21.0], [81.7, 22.0], [81.8, 23.0], [81.9, 24.0], [82.0, 24.0], [82.1, 25.0], [82.2, 28.0], [82.3, 28.0], [82.4, 29.0], [82.5, 31.0], [82.6, 32.0], [82.7, 34.0], [82.8, 36.0], [82.9, 39.0], [83.0, 42.0], [83.1, 48.0], [83.2, 57.0], [83.3, 63.0], [83.4, 71.0], [83.5, 81.0], [83.6, 93.0], [83.7, 99.0], [83.8, 101.0], [83.9, 105.0], [84.0, 121.0], [84.1, 132.0], [84.2, 145.0], [84.3, 164.0], [84.4, 173.0], [84.5, 186.0], [84.6, 201.0], [84.7, 204.0], [84.8, 230.0], [84.9, 261.0], [85.0, 283.0], [85.1, 290.0], [85.2, 297.0], [85.3, 314.0], [85.4, 332.0], [85.5, 360.0], [85.6, 373.0], [85.7, 380.0], [85.8, 389.0], [85.9, 402.0], [86.0, 414.0], [86.1, 420.0], [86.2, 433.0], [86.3, 444.0], [86.4, 458.0], [86.5, 467.0], [86.6, 476.0], [86.7, 489.0], [86.8, 507.0], [86.9, 514.0], [87.0, 524.0], [87.1, 535.0], [87.2, 539.0], [87.3, 550.0], [87.4, 554.0], [87.5, 559.0], [87.6, 567.0], [87.7, 581.0], [87.8, 592.0], [87.9, 600.0], [88.0, 611.0], [88.1, 632.0], [88.2, 637.0], [88.3, 658.0], [88.4, 672.0], [88.5, 679.0], [88.6, 688.0], [88.7, 699.0], [88.8, 709.0], [88.9, 717.0], [89.0, 723.0], [89.1, 731.0], [89.2, 737.0], [89.3, 745.0], [89.4, 752.0], [89.5, 756.0], [89.6, 775.0], [89.7, 779.0], [89.8, 788.0], [89.9, 793.0], [90.0, 800.0], [90.1, 807.0], [90.2, 817.0], [90.3, 824.0], [90.4, 834.0], [90.5, 842.0], [90.6, 848.0], [90.7, 857.0], [90.8, 862.0], [90.9, 870.0], [91.0, 874.0], [91.1, 880.0], [91.2, 887.0], [91.3, 890.0], [91.4, 899.0], [91.5, 903.0], [91.6, 906.0], [91.7, 907.0], [91.8, 911.0], [91.9, 915.0], [92.0, 921.0], [92.1, 927.0], [92.2, 931.0], [92.3, 934.0], [92.4, 940.0], [92.5, 942.0], [92.6, 946.0], [92.7, 954.0], [92.8, 957.0], [92.9, 961.0], [93.0, 964.0], [93.1, 971.0], [93.2, 973.0], [93.3, 976.0], [93.4, 979.0], [93.5, 981.0], [93.6, 986.0], [93.7, 992.0], [93.8, 998.0], [93.9, 1001.0], [94.0, 1005.0], [94.1, 1009.0], [94.2, 1015.0], [94.3, 1020.0], [94.4, 1027.0], [94.5, 1032.0], [94.6, 1036.0], [94.7, 1044.0], [94.8, 1052.0], [94.9, 1062.0], [95.0, 1083.0], [95.1, 1111.0], [95.2, 1125.0], [95.3, 1148.0], [95.4, 1167.0], [95.5, 1188.0], [95.6, 1198.0], [95.7, 1211.0], [95.8, 1223.0], [95.9, 1243.0], [96.0, 1254.0], [96.1, 1264.0], [96.2, 1281.0], [96.3, 1292.0], [96.4, 1316.0], [96.5, 1340.0], [96.6, 1358.0], [96.7, 1364.0], [96.8, 1377.0], [96.9, 1382.0], [97.0, 1398.0], [97.1, 1403.0], [97.2, 1414.0], [97.3, 1426.0], [97.4, 1431.0], [97.5, 1442.0], [97.6, 1453.0], [97.7, 1462.0], [97.8, 1470.0], [97.9, 1491.0], [98.0, 1498.0], [98.1, 1502.0], [98.2, 1507.0], [98.3, 1522.0], [98.4, 1532.0], [98.5, 1540.0], [98.6, 1546.0], [98.7, 1558.0], [98.8, 1564.0], [98.9, 1580.0], [99.0, 1614.0], [99.1, 1651.0], [99.2, 1662.0], [99.3, 1673.0], [99.4, 1697.0], [99.5, 2037.0], [99.6, 2335.0], [99.7, 2518.0], [99.8, 2592.0], [99.9, 3726.0]], "isOverall": false, "label": "PYTHON", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 5024.0, "series": [{"data": [[0.0, 50.0], [300.0, 82.0], [600.0, 240.0], [700.0, 34.0], [200.0, 129.0], [100.0, 120.0], [400.0, 201.0], [500.0, 146.0]], "isOverall": false, "label": "PHP-0", "isController": false}, {"data": [[0.0, 47.0], [300.0, 78.0], [600.0, 242.0], [700.0, 41.0], [100.0, 106.0], [200.0, 134.0], [400.0, 226.0], [500.0, 128.0]], "isOverall": false, "label": "PHP-1", "isController": false}, {"data": [[0.0, 1275.0], [600.0, 840.0], [700.0, 326.0], [800.0, 178.0], [900.0, 183.0], [1000.0, 67.0], [1100.0, 88.0], [1200.0, 113.0], [1300.0, 152.0], [1400.0, 5.0], [1500.0, 3.0], [1600.0, 2.0], [1700.0, 3.0], [1800.0, 3.0], [1900.0, 3.0], [2000.0, 3.0], [2100.0, 4.0], [2200.0, 3.0], [2300.0, 3.0], [2400.0, 3.0], [2500.0, 3.0], [2600.0, 4.0], [2700.0, 1.0], [2800.0, 3.0], [2900.0, 4.0], [3000.0, 3.0], [3100.0, 3.0], [3200.0, 4.0], [3300.0, 3.0], [3400.0, 3.0], [3500.0, 3.0], [3600.0, 25.0], [3700.0, 12.0], [3800.0, 15.0], [3900.0, 10.0], [4000.0, 10.0], [4100.0, 12.0], [4200.0, 16.0], [4300.0, 18.0], [4400.0, 42.0], [4500.0, 21.0], [4600.0, 111.0], [4700.0, 80.0], [4800.0, 21.0], [100.0, 280.0], [200.0, 317.0], [300.0, 460.0], [400.0, 494.0], [500.0, 765.0]], "isOverall": false, "label": "PHP", "isController": false}, {"data": [[0.0, 5024.0], [600.0, 50.0], [700.0, 76.0], [800.0, 86.0], [900.0, 146.0], [1000.0, 70.0], [1100.0, 36.0], [1200.0, 43.0], [1300.0, 41.0], [1400.0, 61.0], [1500.0, 55.0], [100.0, 51.0], [1600.0, 27.0], [1700.0, 2.0], [1800.0, 2.0], [2000.0, 2.0], [2100.0, 1.0], [2200.0, 2.0], [2300.0, 3.0], [2400.0, 5.0], [2500.0, 7.0], [2600.0, 2.0], [200.0, 40.0], [3700.0, 6.0], [3600.0, 1.0], [3800.0, 2.0], [300.0, 38.0], [400.0, 51.0], [500.0, 70.0]], "isOverall": false, "label": "PYTHON", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 573.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1.500ms"], [2, "Requests having \nresponse time > 1.500ms"], [3, "Requests in error"]], "maxY": 8208.0, "series": [{"data": [[0.0, 8208.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 3712.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1.500ms", "isController": false}, {"data": [[2.0, 573.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1.500ms", "isController": false}, {"data": [[3.0, 1511.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 13.0, "minX": 1.71489036E12, "maxY": 86.06421052631568, "series": [{"data": [[1.71489042E12, 56.54499999999998]], "isOverall": false, "label": "CLASES_UPDATE", "isController": false}, {"data": [[1.71489036E12, 60.30999999999996]], "isOverall": false, "label": "ALUMNO_GET", "isController": false}, {"data": [[1.71489042E12, 49.898000000000046]], "isOverall": false, "label": "CLASES_DELETE", "isController": false}, {"data": [[1.71489036E12, 52.843625498007995]], "isOverall": false, "label": "ALUMNOS_UPDATE", "isController": false}, {"data": [[1.71489042E12, 50.305000000000014]], "isOverall": false, "label": "INSCRIPCIONES_UPDATE", "isController": false}, {"data": [[1.71489036E12, 86.06421052631568], [1.71489042E12, 13.0]], "isOverall": false, "label": "CLASES_GET", "isController": false}, {"data": [[1.71489042E12, 65.18500000000002]], "isOverall": false, "label": "INSCRIPCIONES_GET", "isController": false}, {"data": [[1.71489036E12, 42.01049999999992]], "isOverall": false, "label": "ALUMNO_POST", "isController": false}, {"data": [[1.71489036E12, 52.137999999999984]], "isOverall": false, "label": "CLASES_POST", "isController": false}, {"data": [[1.71489042E12, 70.20800000000001]], "isOverall": false, "label": "INSCRIPCIONES_POST", "isController": false}, {"data": [[1.71489042E12, 50.38100000000002]], "isOverall": false, "label": "INSCRIPCIONES_DELETE", "isController": false}, {"data": [[1.71489042E12, 51.82500000000002]], "isOverall": false, "label": "ALUMNO_DELETE", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71489042E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 6.8979591836734695, "minX": 1.0, "maxY": 4700.636363636365, "series": [{"data": [[2.0, 265.0], [3.0, 48.75], [4.0, 69.0], [5.0, 189.0], [6.0, 224.28571428571428], [7.0, 76.75], [8.0, 159.625], [9.0, 277.0], [10.0, 147.66666666666669], [11.0, 132.0], [12.0, 157.16666666666669], [13.0, 209.5], [14.0, 157.28571428571428], [15.0, 154.0], [16.0, 193.8], [17.0, 166.33333333333334], [18.0, 190.6], [19.0, 178.75], [20.0, 160.875], [21.0, 152.33333333333334], [22.0, 161.25], [23.0, 266.61538461538464], [24.0, 213.4], [25.0, 186.44444444444446], [26.0, 238.88888888888889], [27.0, 211.36363636363635], [28.0, 258.0], [29.0, 248.11111111111111], [30.0, 287.125], [31.0, 273.0], [32.0, 264.6363636363636], [33.0, 256.90909090909093], [34.0, 312.6666666666667], [35.0, 323.375], [36.0, 332.7142857142857], [37.0, 289.8], [38.0, 295.5], [39.0, 311.1666666666667], [40.0, 296.6923076923077], [41.0, 306.16666666666663], [42.0, 344.75], [43.0, 330.49999999999994], [44.0, 328.53846153846155], [45.0, 369.5], [46.0, 349.59999999999997], [47.0, 396.8], [48.0, 414.1875], [49.0, 437.7142857142858], [50.0, 494.6], [51.0, 428.8333333333333], [52.0, 461.61538461538464], [53.0, 435.0], [54.0, 468.5], [55.0, 488.3636363636364], [56.0, 435.92857142857144], [57.0, 463.33333333333337], [58.0, 467.4166666666667], [59.0, 456.2142857142857], [60.0, 461.0833333333333], [61.0, 490.5714285714286], [62.0, 490.11111111111114], [63.0, 518.4285714285714], [64.0, 573.2352941176472], [65.0, 581.6153846153845], [66.0, 579.6666666666666], [67.0, 541.3333333333334], [68.0, 530.1176470588234], [69.0, 518.4375], [70.0, 509.75], [71.0, 492.6666666666667], [72.0, 579.7142857142858], [73.0, 548.875], [75.0, 648.0], [74.0, 645.8571428571429], [76.0, 589.0000000000001], [77.0, 604.9999999999999], [79.0, 596.2727272727273], [78.0, 661.0], [81.0, 426.6666666666667], [82.0, 587.1111111111111], [83.0, 615.7142857142857], [80.0, 652.7142857142858], [84.0, 600.4545454545454], [85.0, 607.5714285714287], [86.0, 599.3333333333334], [87.0, 589.5714285714286], [88.0, 609.4545454545454], [89.0, 607.1428571428571], [90.0, 648.2307692307693], [91.0, 659.1666666666667], [92.0, 679.8], [93.0, 702.692307692308], [95.0, 608.12], [94.0, 694.7142857142857], [96.0, 518.975], [97.0, 405.20000000000005], [1.0, 82.0]], "isOverall": false, "label": "PHP-0", "isController": false}, {"data": [[55.999001996008, 432.47604790419206]], "isOverall": false, "label": "PHP-0-Aggregated", "isController": false}, {"data": [[2.0, 173.5], [3.0, 34.75], [4.0, 43.0], [5.0, 127.66666666666666], [6.0, 115.28571428571428], [7.0, 66.0], [8.0, 117.0], [9.0, 180.0], [10.0, 112.66666666666667], [11.0, 104.75], [12.0, 119.0], [13.0, 159.0], [14.0, 134.42857142857142], [15.0, 140.42857142857142], [16.0, 161.6], [17.0, 159.0], [18.0, 178.6], [19.0, 168.0], [20.0, 143.625], [21.0, 141.16666666666666], [22.0, 160.75], [23.0, 207.07692307692304], [24.0, 190.9], [25.0, 185.66666666666663], [26.0, 219.22222222222223], [27.0, 208.54545454545456], [28.0, 219.40000000000003], [29.0, 221.7777777777778], [30.0, 246.375], [31.0, 270.0], [32.0, 267.3636363636364], [33.0, 268.3636363636364], [34.0, 281.3333333333333], [35.0, 285.75], [36.0, 303.2857142857143], [37.0, 271.0], [38.0, 303.625], [39.0, 316.49999999999994], [40.0, 323.46153846153845], [41.0, 364.5], [42.0, 415.125], [43.0, 411.5833333333333], [44.0, 411.07692307692315], [45.0, 453.0], [46.0, 413.20000000000005], [47.0, 400.2666666666667], [48.0, 368.125], [49.0, 409.85714285714283], [50.0, 426.40000000000003], [51.0, 395.16666666666663], [52.0, 406.92307692307696], [53.0, 421.6500000000001], [54.0, 433.28571428571433], [55.0, 468.0], [56.0, 464.78571428571433], [57.0, 486.2666666666667], [58.0, 482.83333333333337], [59.0, 495.7857142857143], [60.0, 460.66666666666663], [61.0, 487.7857142857143], [62.0, 479.3888888888889], [63.0, 475.7857142857143], [64.0, 486.35294117647055], [65.0, 530.8461538461538], [66.0, 506.1111111111111], [67.0, 550.3333333333334], [68.0, 589.8823529411766], [69.0, 608.6875], [70.0, 564.25], [71.0, 544.6666666666666], [72.0, 594.1428571428571], [73.0, 570.125], [75.0, 627.5], [74.0, 636.5714285714286], [76.0, 596.5454545454546], [77.0, 607.4285714285714], [79.0, 572.1818181818181], [78.0, 636.0], [81.0, 515.3333333333334], [82.0, 606.8888888888889], [83.0, 629.8571428571429], [80.0, 617.7142857142857], [84.0, 627.2727272727274], [85.0, 642.2857142857142], [86.0, 621.8333333333333], [87.0, 635.3571428571429], [88.0, 652.8181818181818], [89.0, 643.7857142857143], [90.0, 647.8461538461538], [91.0, 639.5833333333334], [92.0, 642.1], [93.0, 668.576923076923], [95.0, 698.88], [94.0, 681.2857142857142], [96.0, 683.2], [97.0, 582.0666666666667], [1.0, 44.5]], "isOverall": false, "label": "PHP-1", "isController": false}, {"data": [[55.999001996008, 438.5359281437121]], "isOverall": false, "label": "PHP-1-Aggregated", "isController": false}, {"data": [[2.0, 241.96296296296293], [3.0, 197.54838709677418], [4.0, 183.31428571428575], [5.0, 222.09375], [6.0, 221.125], [7.0, 210.62500000000003], [8.0, 245.20000000000005], [9.0, 311.2424242424243], [10.0, 252.88571428571422], [11.0, 228.16666666666666], [12.0, 258.63888888888897], [13.0, 298.53333333333336], [14.0, 264.51351351351354], [15.0, 252.20000000000002], [16.0, 248.95121951219514], [17.0, 281.64102564102564], [18.0, 303.153846153846], [19.0, 285.6808510638297], [20.0, 283.34146341463406], [21.0, 283.4871794871795], [22.0, 312.11764705882365], [23.0, 315.7307692307691], [24.0, 364.21621621621625], [25.0, 309.0697674418604], [26.0, 355.58974358974365], [27.0, 354.2978723404255], [28.0, 367.47916666666674], [29.0, 387.1555555555555], [30.0, 406.3617021276596], [31.0, 368.45652173913044], [32.0, 380.81132075471703], [33.0, 411.1052631578947], [34.0, 402.1228070175438], [35.0, 410.98181818181826], [36.0, 512.7105263157896], [37.0, 485.11363636363626], [38.0, 465.72340425531917], [39.0, 475.30769230769226], [40.0, 476.7627118644068], [41.0, 484.71428571428567], [42.0, 506.17391304347825], [43.0, 497.1052631578948], [44.0, 506.7407407407407], [45.0, 519.156862745098], [46.0, 495.3934426229508], [47.0, 531.6], [48.0, 552.5079365079365], [49.0, 577.90625], [50.0, 513.3428571428572], [51.0, 546.2166666666668], [52.0, 556.492957746479], [53.0, 591.135135135135], [54.0, 545.0746268656716], [55.0, 620.3235294117649], [56.0, 533.5316455696201], [57.0, 547.1975308641976], [58.0, 607.2343750000001], [59.0, 563.7349397590364], [60.0, 604.264705882353], [61.0, 537.4743589743591], [62.0, 626.1153846153845], [63.0, 634.9166666666666], [64.0, 676.5056179775282], [65.0, 686.4250000000004], [66.0, 645.4999999999995], [67.0, 635.3894736842107], [68.0, 725.6067415730336], [69.0, 719.2968750000001], [70.0, 623.0], [71.0, 691.5104166666665], [72.0, 862.3367346938772], [73.0, 704.6923076923078], [74.0, 740.6422018348622], [75.0, 807.9545454545453], [76.0, 629.9064748201441], [77.0, 762.5503875968992], [78.0, 639.7808219178082], [79.0, 755.2616822429908], [80.0, 758.0652173913044], [81.0, 671.3086419753089], [82.0, 681.5949367088607], [83.0, 867.0425531914892], [84.0, 669.295081967213], [85.0, 774.1525423728812], [87.0, 1079.3023255813953], [86.0, 577.0754716981132], [88.0, 355.26829268292704], [89.0, 1343.6], [91.0, 1365.4242424242425], [90.0, 915.8717948717948], [92.0, 2125.7419354838707], [94.0, 2750.7727272727266], [95.0, 2895.586956521739], [93.0, 1662.525423728814], [96.0, 1842.5799999999997], [99.0, 4589.563636363638], [98.0, 4700.636363636365], [97.0, 3282.9210526315796], [100.0, 3242.5263157894738], [1.0, 299.7894736842105]], "isOverall": false, "label": "PHP", "isController": false}, {"data": [[57.00250000000011, 752.7195000000011]], "isOverall": false, "label": "PHP-Aggregated", "isController": false}, {"data": [[2.0, 36.519999999999996], [3.0, 27.323529411764703], [4.0, 39.00000000000001], [5.0, 23.222222222222218], [6.0, 31.393939393939394], [7.0, 32.3076923076923], [8.0, 27.771428571428576], [9.0, 59.09677419354837], [10.0, 32.63333333333334], [11.0, 40.3], [12.0, 54.76666666666669], [13.0, 31.499999999999996], [14.0, 42.405405405405396], [15.0, 63.30769230769229], [16.0, 41.81818181818181], [17.0, 53.289473684210535], [18.0, 59.634146341463385], [19.0, 14.756097560975613], [20.0, 53.18604651162791], [21.0, 70.90243902439023], [22.0, 32.00000000000001], [23.0, 72.02222222222223], [24.0, 37.374999999999986], [25.0, 40.29268292682928], [26.0, 82.04878048780488], [27.0, 82.1860465116279], [28.0, 99.70588235294115], [29.0, 58.66666666666665], [30.0, 81.46153846153844], [31.0, 115.27659574468086], [32.0, 110.83928571428572], [33.0, 48.58181818181818], [34.0, 116.4745762711864], [35.0, 84.69387755102039], [36.0, 81.56410256410255], [37.0, 64.32608695652175], [38.0, 36.84090909090909], [39.0, 86.58000000000001], [40.0, 107.48387096774192], [41.0, 92.7], [42.0, 127.58695652173914], [43.0, 110.12280701754392], [44.0, 61.15094339622639], [45.0, 124.63999999999997], [46.0, 219.06666666666666], [47.0, 115.59701492537314], [48.0, 119.00000000000003], [49.0, 92.10144927536233], [50.0, 162.45945945945948], [51.0, 112.03076923076927], [52.0, 132.64705882352942], [53.0, 147.10975609756105], [54.0, 138.38805970149255], [55.0, 32.781250000000014], [56.0, 193.60000000000002], [57.0, 211.4302325581394], [58.0, 79.07575757575754], [59.0, 146.08333333333337], [60.0, 148.91428571428568], [61.0, 244.4155844155844], [62.0, 128.7682926829268], [63.0, 18.87179487179487], [64.0, 139.91208791208794], [65.0, 43.650602409638594], [66.0, 108.72826086956526], [67.0, 167.02105263157884], [68.0, 85.0989010989011], [69.0, 181.21538461538466], [70.0, 225.83157894736846], [71.0, 131.12631578947375], [72.0, 136.56730769230776], [73.0, 209.4950495049505], [74.0, 141.81818181818184], [75.0, 144.24786324786325], [76.0, 210.7348484848483], [78.0, 190.60544217687072], [79.0, 88.50943396226415], [77.0, 132.9767441860465], [80.0, 262.6451612903227], [81.0, 384.98823529411754], [83.0, 473.4255319148935], [82.0, 495.6184210526316], [84.0, 884.3125], [85.0, 615.6842105263158], [86.0, 548.0338983050846], [87.0, 384.5348837209303], [88.0, 931.2266666666666], [89.0, 466.77142857142854], [90.0, 525.8780487804878], [91.0, 221.7941176470588], [92.0, 281.3], [94.0, 187.26829268292684], [95.0, 7.555555555555558], [93.0, 296.44262295081967], [97.0, 7.224999999999999], [99.0, 8.018181818181821], [98.0, 10.393939393939396], [96.0, 6.8979591836734695], [100.0, 9.06140350877193], [1.0, 31.47368421052631]], "isOverall": false, "label": "PYTHON", "isController": false}, {"data": [[57.0421666666665, 159.74016666666654]], "isOverall": false, "label": "PYTHON-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 31464.6, "minX": 1.71489036E12, "maxY": 2240365.183333333, "series": [{"data": [[1.71489036E12, 2240365.183333333], [1.71489042E12, 1053750.0166666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71489036E12, 33206.0], [1.71489042E12, 31464.6]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71489042E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 146.9195959595959, "minX": 1.71489036E12, "maxY": 1086.0557575757568, "series": [{"data": [[1.71489036E12, 346.26294820717163], [1.71489042E12, 519.0339999999998]], "isOverall": false, "label": "PHP-0", "isController": false}, {"data": [[1.71489036E12, 346.1095617529878], [1.71489042E12, 531.332]], "isOverall": false, "label": "PHP-1", "isController": false}, {"data": [[1.71489036E12, 1086.0557575757568], [1.71489042E12, 518.6748936170219]], "isOverall": false, "label": "PHP", "isController": false}, {"data": [[1.71489036E12, 146.9195959595959], [1.71489042E12, 168.7418439716315]], "isOverall": false, "label": "PYTHON", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71489042E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 146.1212121212123, "minX": 1.71489036E12, "maxY": 1015.5810101010109, "series": [{"data": [[1.71489036E12, 345.99601593625505], [1.71489042E12, 518.8040000000002]], "isOverall": false, "label": "PHP-0", "isController": false}, {"data": [[1.71489036E12, 345.8366533864541], [1.71489042E12, 531.0719999999999]], "isOverall": false, "label": "PHP-1", "isController": false}, {"data": [[1.71489036E12, 1015.5810101010109], [1.71489042E12, 443.0666666666659]], "isOverall": false, "label": "PHP", "isController": false}, {"data": [[1.71489036E12, 146.1212121212123], [1.71489042E12, 166.17617021276612]], "isOverall": false, "label": "PYTHON", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71489042E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.20916334661354594, "minX": 1.71489036E12, "maxY": 22.550354609929084, "series": [{"data": [[1.71489036E12, 0.2888446215139444], [1.71489042E12, 0.3659999999999998]], "isOverall": false, "label": "PHP-0", "isController": false}, {"data": [[1.71489036E12, 0.20916334661354594], [1.71489042E12, 0.25400000000000034]], "isOverall": false, "label": "PHP-1", "isController": false}, {"data": [[1.71489036E12, 0.3123232323232323], [1.71489042E12, 0.30439716312056725]], "isOverall": false, "label": "PHP", "isController": false}, {"data": [[1.71489036E12, 11.793535353535383], [1.71489042E12, 22.550354609929084]], "isOverall": false, "label": "PYTHON", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71489042E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.71489036E12, "maxY": 4821.0, "series": [{"data": [[1.71489036E12, 4821.0], [1.71489042E12, 3849.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71489036E12, 2.0], [1.71489042E12, 2.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71489036E12, 1027.9000000000005], [1.71489042E12, 947.1999999999998]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71489036E12, 4781.0], [1.71489042E12, 1655.5599999999986]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71489036E12, 148.5], [1.71489042E12, 234.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.71489036E12, 4432.299999999999], [1.71489042E12, 1313.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71489042E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 4.0, "minX": 36.0, "maxY": 4007.0, "series": [{"data": [[37.0, 30.0], [36.0, 1827.0], [38.0, 1884.5], [40.0, 2364.5], [42.0, 258.5], [43.0, 4007.0], [44.0, 974.5], [61.0, 45.0], [81.0, 1143.0], [93.0, 157.0], [96.0, 1275.0], [103.0, 858.0], [101.0, 129.0], [106.0, 770.0], [111.0, 1502.0], [122.0, 11.5], [143.0, 33.0], [150.0, 37.0], [148.0, 859.0], [145.0, 422.0], [158.0, 33.0], [165.0, 77.0], [173.0, 35.0], [171.0, 182.0], [181.0, 40.5], [179.0, 4.0], [183.0, 24.0], [186.0, 285.0], [189.0, 721.0], [185.0, 16.0], [207.0, 64.0], [204.0, 456.0], [202.0, 21.5], [215.0, 4.0], [214.0, 194.0], [209.0, 15.0], [219.0, 127.5], [221.0, 533.0], [220.0, 4.0], [218.0, 305.5], [217.0, 30.0], [222.0, 566.0], [227.0, 272.0], [226.0, 22.0], [234.0, 7.0], [233.0, 170.0], [239.0, 440.0], [246.0, 436.0], [250.0, 125.5], [253.0, 324.0], [251.0, 5.0], [254.0, 379.5], [252.0, 7.0], [262.0, 241.0], [269.0, 706.0], [273.0, 661.0], [285.0, 662.0], [276.0, 632.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[143.0, 250.5], [158.0, 201.0], [165.0, 101.0], [181.0, 202.0], [179.0, 425.0], [206.0, 44.0], [215.0, 555.0], [220.0, 678.5], [219.0, 108.0], [226.0, 177.5], [234.0, 128.0], [238.0, 305.5], [251.0, 396.0], [106.0, 9.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 285.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 36.0, "maxY": 4007.0, "series": [{"data": [[37.0, 30.0], [36.0, 1827.0], [38.0, 1884.0], [40.0, 2364.5], [42.0, 258.5], [43.0, 4007.0], [44.0, 974.5], [61.0, 41.0], [81.0, 1143.0], [93.0, 157.0], [96.0, 1275.0], [103.0, 858.0], [101.0, 129.0], [106.0, 770.0], [111.0, 1502.0], [122.0, 11.5], [143.0, 33.0], [150.0, 37.0], [148.0, 859.0], [145.0, 422.0], [158.0, 33.0], [165.0, 77.0], [173.0, 35.0], [171.0, 182.0], [181.0, 40.5], [179.0, 4.0], [183.0, 24.0], [186.0, 284.5], [189.0, 720.0], [185.0, 15.0], [207.0, 64.0], [204.0, 455.0], [202.0, 7.0], [215.0, 4.0], [214.0, 194.0], [209.0, 0.0], [219.0, 127.0], [221.0, 509.5], [220.0, 4.0], [218.0, 305.5], [217.0, 30.0], [222.0, 566.0], [227.0, 262.0], [226.0, 0.0], [234.0, 7.0], [233.0, 135.0], [239.0, 334.0], [246.0, 432.0], [250.0, 100.0], [253.0, 324.0], [251.0, 5.0], [254.0, 379.5], [252.0, 0.0], [262.0, 198.5], [269.0, 592.0], [273.0, 660.0], [285.0, 656.0], [276.0, 629.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[143.0, 0.0], [158.0, 0.0], [165.0, 0.0], [181.0, 0.0], [179.0, 425.0], [206.0, 44.0], [215.0, 554.0], [220.0, 678.0], [219.0, 107.5], [226.0, 177.5], [234.0, 128.0], [238.0, 305.5], [251.0, 395.5], [106.0, 8.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 285.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 99.65, "minX": 1.71489036E12, "maxY": 133.75, "series": [{"data": [[1.71489036E12, 99.65], [1.71489042E12, 133.75]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71489042E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.71489036E12, "maxY": 57.4, "series": [{"data": [[1.71489036E12, 57.4], [1.71489042E12, 50.78333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.71489036E12, 25.0], [1.71489042E12, 8.333333333333334]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.71489036E12, 8.366666666666667], [1.71489042E12, 8.333333333333334]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.71489042E12, 25.016666666666666]], "isOverall": false, "label": "204", "isController": false}, {"data": [[1.71489036E12, 8.283333333333333], [1.71489042E12, 41.65]], "isOverall": false, "label": "404", "isController": false}, {"data": [[1.71489036E12, 0.18333333333333332], [1.71489042E12, 0.05]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71489042E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.18333333333333332, "minX": 1.71489036E12, "maxY": 50.416666666666664, "series": [{"data": [[1.71489036E12, 32.96666666666667], [1.71489042E12, 50.416666666666664]], "isOverall": false, "label": "PHP-success", "isController": false}, {"data": [[1.71489036E12, 41.06666666666667], [1.71489042E12, 50.36666666666667]], "isOverall": false, "label": "PYTHON-success", "isController": false}, {"data": [[1.71489036E12, 0.18333333333333332], [1.71489042E12, 8.383333333333333]], "isOverall": false, "label": "PYTHON-failure", "isController": false}, {"data": [[1.71489036E12, 8.283333333333333], [1.71489042E12, 8.333333333333334]], "isOverall": false, "label": "PHP-failure", "isController": false}, {"data": [[1.71489036E12, 8.366666666666667], [1.71489042E12, 8.333333333333334]], "isOverall": false, "label": "PHP-0-success", "isController": false}, {"data": [[1.71489036E12, 8.366666666666667], [1.71489042E12, 8.333333333333334]], "isOverall": false, "label": "PHP-1-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71489042E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 8.466666666666667, "minX": 1.71489036E12, "maxY": 117.45, "series": [{"data": [[1.71489036E12, 90.76666666666667], [1.71489042E12, 117.45]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.71489036E12, 8.466666666666667], [1.71489042E12, 16.716666666666665]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71489042E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

